# Makefile.in generated by automake 1.11.6 from Makefile.am.
# hdt-lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/hdt
pkgincludedir = $(includedir)/hdt
pkglibdir = $(libdir)/hdt
pkglibexecdir = $(libexecdir)/hdt
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = hdt2rdf$(EXEEXT) hdtInfo$(EXEEXT) hdtSearch$(EXEEXT) \
	rdf2hdt$(EXEEXT) replaceHeader$(EXEEXT)
subdir = hdt-lib
DIST_COMMON = README $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libhdt_la_LIBADD =
am_libhdt_la_OBJECTS = libhdt_la-HDTSpecification.lo \
	libhdt_la-HDTFactory.lo libhdt_la-HDTManager.lo \
	libhdt_la-ControlInformation.lo libhdt_la-BasicHDT.lo \
	libhdt_la-StopWatch.lo libhdt_la-propertyutil.lo \
	libhdt_la-TriplesList.lo libhdt_la-TriplesComparator.lo \
	libhdt_la-TripleOrderConvert.lo libhdt_la-TripleIterators.lo \
	libhdt_la-PlainTriples.lo libhdt_la-CompactTriples.lo \
	libhdt_la-BitmapTriples.lo libhdt_la-BitmapTriplesIterators.lo \
	libhdt_la-TripleListDisk.lo libhdt_la-TriplesKyoto.lo \
	libhdt_la-Huffman.lo libhdt_la-huff.lo \
	libhdt_la-PlainHeader.lo libhdt_la-VByte.lo libhdt_la-CSD.lo \
	libhdt_la-CSD_PFC.lo libhdt_la-CSD_HTFC.lo \
	libhdt_la-CSD_FMIndex.lo libhdt_la-CSD_Cache2.lo \
	libhdt_la-CSD_Cache.lo libhdt_la-SuffixArray.lo \
	libhdt_la-SSA.lo libhdt_la-PlainDictionary.lo \
	libhdt_la-FourSectionDictionary.lo \
	libhdt_la-KyotoDictionary.lo libhdt_la-LiteralDictionary.lo \
	libhdt_la-RDFParserNtriples.lo libhdt_la-RDFParser.lo \
	libhdt_la-RDFSerializerNTriples.lo \
	libhdt_la-RDFSerializerRaptor.lo libhdt_la-RDFSerializer.lo \
	libhdt_la-fileUtil.lo libhdt_la-RDFParserRaptorCallback.lo \
	libhdt_la-RDFParserSerd.lo libhdt_la-TriplePatternBinding.lo \
	libhdt_la-MergeJoinBinding.lo libhdt_la-JoinAlgorithms.lo \
	libhdt_la-IndexJoinBinding.lo libhdt_la-SortBinding.lo \
	libhdt_la-WaveletSequence.lo libhdt_la-LogSequence2.lo \
	libhdt_la-LogSequence.lo libhdt_la-IntSequence.lo \
	libhdt_la-HuffmanSequence.lo libhdt_la-ArraySequence.lo \
	libhdt_la-AdjacencyList.lo libhdt_la-TripleIDStringIterator.lo \
	libhdt_la-BasicModifiableHDT.lo libhdt_la-QueryProcessor.lo \
	libhdt_la-BitSequence375.lo libhdt_la-crc32.lo \
	libhdt_la-crc16.lo libhdt_la-crc8.lo libhdt_la-bitutil.lo \
	libhdt_la-filemap.lo libhdt_la-gzstream.lo \
	libhdt_la-RDFParserNtriplesCallback.lo \
	libhdt_la-predicateindex.lo
libhdt_la_OBJECTS = $(am_libhdt_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
PROGRAMS = $(bin_PROGRAMS)
am_hdt2rdf_OBJECTS = hdt2rdf-hdt2rdf.$(OBJEXT)
hdt2rdf_OBJECTS = $(am_hdt2rdf_OBJECTS)
hdt2rdf_DEPENDENCIES = libhdt.la
am_hdtInfo_OBJECTS = hdtInfo-hdtInfo.$(OBJEXT)
hdtInfo_OBJECTS = $(am_hdtInfo_OBJECTS)
hdtInfo_DEPENDENCIES = libhdt.la
am_hdtSearch_OBJECTS = hdtSearch-hdtSearch.$(OBJEXT)
hdtSearch_OBJECTS = $(am_hdtSearch_OBJECTS)
hdtSearch_DEPENDENCIES = libhdt.la
am_rdf2hdt_OBJECTS = rdf2hdt-rdf2hdt.$(OBJEXT)
rdf2hdt_OBJECTS = $(am_rdf2hdt_OBJECTS)
rdf2hdt_DEPENDENCIES = libhdt.la
am_replaceHeader_OBJECTS = replaceHeader-replaceHeader.$(OBJEXT)
replaceHeader_OBJECTS = $(am_replaceHeader_OBJECTS)
replaceHeader_DEPENDENCIES = libhdt.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libhdt_la_SOURCES) $(hdt2rdf_SOURCES) $(hdtInfo_SOURCES) \
	$(hdtSearch_SOURCES) $(rdf2hdt_SOURCES) \
	$(replaceHeader_SOURCES)
DIST_SOURCES = $(libhdt_la_SOURCES) $(hdt2rdf_SOURCES) \
	$(hdtInfo_SOURCES) $(hdtSearch_SOURCES) $(rdf2hdt_SOURCES) \
	$(replaceHeader_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hdt
PACKAGE_BUGREPORT = email@someone.com
PACKAGE_NAME = hdt
PACKAGE_STRING = hdt 1.1.2
PACKAGE_TARNAME = hdt
PACKAGE_URL = 
PACKAGE_VERSION = 1.1.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.1.2
abs_builddir = /home/pabtor/workspace/c++/hdt-cpp/hdt-lib
abs_srcdir = /home/pabtor/workspace/c++/hdt-cpp/hdt-lib
abs_top_builddir = /home/pabtor/workspace/c++/hdt-cpp
abs_top_srcdir = /home/pabtor/workspace/c++/hdt-cpp
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/pabtor/root/usr/local/hdt-cpp
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libhdt.la
libhdt_la_SOURCES = \
src/hdt/HDTSpecification.cpp \
src/hdt/HDTFactory.cpp \
src/hdt/HDTManager.cpp \
src/hdt/ControlInformation.cpp \
src/hdt/BasicHDT.cpp \
src/hdt/BasicModifiableHDT.hpp \
src/util/StopWatch.cpp \
src/util/propertyutil.cpp \
src/triples/TriplesList.cpp \
src/triples/TriplesComparator.cpp \
src/triples/TripleOrderConvert.cpp \
src/triples/TripleIterators.cpp \
src/triples/PlainTriples.cpp \
src/triples/CompactTriples.cpp \
src/triples/BitmapTriples.cpp \
src/triples/BitmapTriplesIterators.cpp \
src/triples/TripleListDisk.cpp \
src/triples/TriplesKyoto.cpp \
src/huffman/Huffman.cpp \
src/huffman/huff.cpp \
src/header/PlainHeader.cpp \
src/libdcs/VByte.cpp \
src/libdcs/CSD.cpp \
src/libdcs/CSD_PFC.cpp \
src/libdcs/CSD_HTFC.cpp \
src/libdcs/CSD_FMIndex.cpp \
src/libdcs/CSD_Cache2.cpp \
src/libdcs/CSD_Cache.cpp \
src/libdcs/fmindex/SuffixArray.cpp \
src/libdcs/fmindex/SSA.cpp \
src/dictionary/PlainDictionary.cpp \
src/dictionary/FourSectionDictionary.cpp \
src/dictionary/KyotoDictionary.cpp \
src/dictionary/LiteralDictionary.cpp \
src/rdf/RDFParserNtriples.cpp \
src/rdf/RDFParser.cpp \
src/rdf/RDFSerializerNTriples.cpp \
src/rdf/RDFSerializerRaptor.cpp \
src/rdf/RDFSerializer.cpp \
src/util/fileUtil.cpp \
src/rdf/RDFParserRaptorCallback.cpp \
src/rdf/RDFParserSerd.cpp \
src/sparql/TriplePatternBinding.cpp \
src/sparql/MergeJoinBinding.cpp \
src/sparql/JoinAlgorithms.cpp \
src/sparql/IndexJoinBinding.cpp \
src/sparql/SortBinding.cpp \
src/sequence/WaveletSequence.cpp \
src/sequence/LogSequence2.cpp \
src/sequence/LogSequence.cpp \
src/sequence/IntSequence.cpp \
src/sequence/HuffmanSequence.cpp \
src/sequence/ArraySequence.cpp \
src/sequence/AdjacencyList.cpp \
src/hdt/TripleIDStringIterator.cpp \
src/hdt/BasicModifiableHDT.cpp \
src/sparql/QueryProcessor.cpp \
src/bitsequence/BitSequence375.cpp \
src/util/crc32.cpp \
src/util/crc16.cpp \
src/util/crc8.cpp \
src/util/bitutil.cpp \
src/util/filemap.cpp \
third/gzstream.cpp \
src/rdf/RDFParserNtriplesCallback.cpp \
src/triples/predicateindex.cpp

libhdt_la_CPPFLAGS = -I$(builddir)/include -I$(top_builddir)/libcds-v1.0.12/includes -DHAVE_CDS
hdt2rdf_SOURCES = tools/hdt2rdf.cpp
hdt2rdf_CPPFLAGS = -I$(builddir)/include
hdt2rdf_LDADD = libhdt.la
hdtInfo_SOURCES = tools/hdtInfo.cpp
hdtInfo_CPPFLAGS = -I$(builddir)/include
hdtInfo_LDADD = libhdt.la
hdtSearch_SOURCES = tools/hdtSearch.cpp
hdtSearch_CPPFLAGS = -I$(builddir)/include
hdtSearch_LDADD = libhdt.la
rdf2hdt_SOURCES = tools/rdf2hdt.cpp
rdf2hdt_CPPFLAGS = -I$(builddir)/include
rdf2hdt_LDADD = libhdt.la
replaceHeader_SOURCES = tools/replaceHeader.cpp
replaceHeader_CPPFLAGS = -I$(builddir)/include
replaceHeader_LDADD = libhdt.la
pkginclude_HEADERS = include/*
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign hdt-lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign hdt-lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libhdt.la: $(libhdt_la_OBJECTS) $(libhdt_la_DEPENDENCIES) $(EXTRA_libhdt_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libhdt_la_OBJECTS) $(libhdt_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
hdt2rdf$(EXEEXT): $(hdt2rdf_OBJECTS) $(hdt2rdf_DEPENDENCIES) $(EXTRA_hdt2rdf_DEPENDENCIES) 
	@rm -f hdt2rdf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hdt2rdf_OBJECTS) $(hdt2rdf_LDADD) $(LIBS)
hdtInfo$(EXEEXT): $(hdtInfo_OBJECTS) $(hdtInfo_DEPENDENCIES) $(EXTRA_hdtInfo_DEPENDENCIES) 
	@rm -f hdtInfo$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hdtInfo_OBJECTS) $(hdtInfo_LDADD) $(LIBS)
hdtSearch$(EXEEXT): $(hdtSearch_OBJECTS) $(hdtSearch_DEPENDENCIES) $(EXTRA_hdtSearch_DEPENDENCIES) 
	@rm -f hdtSearch$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hdtSearch_OBJECTS) $(hdtSearch_LDADD) $(LIBS)
rdf2hdt$(EXEEXT): $(rdf2hdt_OBJECTS) $(rdf2hdt_DEPENDENCIES) $(EXTRA_rdf2hdt_DEPENDENCIES) 
	@rm -f rdf2hdt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rdf2hdt_OBJECTS) $(rdf2hdt_LDADD) $(LIBS)
replaceHeader$(EXEEXT): $(replaceHeader_OBJECTS) $(replaceHeader_DEPENDENCIES) $(EXTRA_replaceHeader_DEPENDENCIES) 
	@rm -f replaceHeader$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(replaceHeader_OBJECTS) $(replaceHeader_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hdt2rdf-hdt2rdf.Po
include ./$(DEPDIR)/hdtInfo-hdtInfo.Po
include ./$(DEPDIR)/hdtSearch-hdtSearch.Po
include ./$(DEPDIR)/libhdt_la-AdjacencyList.Plo
include ./$(DEPDIR)/libhdt_la-ArraySequence.Plo
include ./$(DEPDIR)/libhdt_la-BasicHDT.Plo
include ./$(DEPDIR)/libhdt_la-BasicModifiableHDT.Plo
include ./$(DEPDIR)/libhdt_la-BitSequence375.Plo
include ./$(DEPDIR)/libhdt_la-BitmapTriples.Plo
include ./$(DEPDIR)/libhdt_la-BitmapTriplesIterators.Plo
include ./$(DEPDIR)/libhdt_la-CSD.Plo
include ./$(DEPDIR)/libhdt_la-CSD_Cache.Plo
include ./$(DEPDIR)/libhdt_la-CSD_Cache2.Plo
include ./$(DEPDIR)/libhdt_la-CSD_FMIndex.Plo
include ./$(DEPDIR)/libhdt_la-CSD_HTFC.Plo
include ./$(DEPDIR)/libhdt_la-CSD_PFC.Plo
include ./$(DEPDIR)/libhdt_la-CompactTriples.Plo
include ./$(DEPDIR)/libhdt_la-ControlInformation.Plo
include ./$(DEPDIR)/libhdt_la-FourSectionDictionary.Plo
include ./$(DEPDIR)/libhdt_la-HDTFactory.Plo
include ./$(DEPDIR)/libhdt_la-HDTManager.Plo
include ./$(DEPDIR)/libhdt_la-HDTSpecification.Plo
include ./$(DEPDIR)/libhdt_la-Huffman.Plo
include ./$(DEPDIR)/libhdt_la-HuffmanSequence.Plo
include ./$(DEPDIR)/libhdt_la-IndexJoinBinding.Plo
include ./$(DEPDIR)/libhdt_la-IntSequence.Plo
include ./$(DEPDIR)/libhdt_la-JoinAlgorithms.Plo
include ./$(DEPDIR)/libhdt_la-KyotoDictionary.Plo
include ./$(DEPDIR)/libhdt_la-LiteralDictionary.Plo
include ./$(DEPDIR)/libhdt_la-LogSequence.Plo
include ./$(DEPDIR)/libhdt_la-LogSequence2.Plo
include ./$(DEPDIR)/libhdt_la-MergeJoinBinding.Plo
include ./$(DEPDIR)/libhdt_la-PlainDictionary.Plo
include ./$(DEPDIR)/libhdt_la-PlainHeader.Plo
include ./$(DEPDIR)/libhdt_la-PlainTriples.Plo
include ./$(DEPDIR)/libhdt_la-QueryProcessor.Plo
include ./$(DEPDIR)/libhdt_la-RDFParser.Plo
include ./$(DEPDIR)/libhdt_la-RDFParserNtriples.Plo
include ./$(DEPDIR)/libhdt_la-RDFParserNtriplesCallback.Plo
include ./$(DEPDIR)/libhdt_la-RDFParserRaptorCallback.Plo
include ./$(DEPDIR)/libhdt_la-RDFParserSerd.Plo
include ./$(DEPDIR)/libhdt_la-RDFSerializer.Plo
include ./$(DEPDIR)/libhdt_la-RDFSerializerNTriples.Plo
include ./$(DEPDIR)/libhdt_la-RDFSerializerRaptor.Plo
include ./$(DEPDIR)/libhdt_la-SSA.Plo
include ./$(DEPDIR)/libhdt_la-SortBinding.Plo
include ./$(DEPDIR)/libhdt_la-StopWatch.Plo
include ./$(DEPDIR)/libhdt_la-SuffixArray.Plo
include ./$(DEPDIR)/libhdt_la-TripleIDStringIterator.Plo
include ./$(DEPDIR)/libhdt_la-TripleIterators.Plo
include ./$(DEPDIR)/libhdt_la-TripleListDisk.Plo
include ./$(DEPDIR)/libhdt_la-TripleOrderConvert.Plo
include ./$(DEPDIR)/libhdt_la-TriplePatternBinding.Plo
include ./$(DEPDIR)/libhdt_la-TriplesComparator.Plo
include ./$(DEPDIR)/libhdt_la-TriplesKyoto.Plo
include ./$(DEPDIR)/libhdt_la-TriplesList.Plo
include ./$(DEPDIR)/libhdt_la-VByte.Plo
include ./$(DEPDIR)/libhdt_la-WaveletSequence.Plo
include ./$(DEPDIR)/libhdt_la-bitutil.Plo
include ./$(DEPDIR)/libhdt_la-crc16.Plo
include ./$(DEPDIR)/libhdt_la-crc32.Plo
include ./$(DEPDIR)/libhdt_la-crc8.Plo
include ./$(DEPDIR)/libhdt_la-fileUtil.Plo
include ./$(DEPDIR)/libhdt_la-filemap.Plo
include ./$(DEPDIR)/libhdt_la-gzstream.Plo
include ./$(DEPDIR)/libhdt_la-huff.Plo
include ./$(DEPDIR)/libhdt_la-predicateindex.Plo
include ./$(DEPDIR)/libhdt_la-propertyutil.Plo
include ./$(DEPDIR)/rdf2hdt-rdf2hdt.Po
include ./$(DEPDIR)/replaceHeader-replaceHeader.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libhdt_la-HDTSpecification.lo: src/hdt/HDTSpecification.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-HDTSpecification.lo -MD -MP -MF $(DEPDIR)/libhdt_la-HDTSpecification.Tpo -c -o libhdt_la-HDTSpecification.lo `test -f 'src/hdt/HDTSpecification.cpp' || echo '$(srcdir)/'`src/hdt/HDTSpecification.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-HDTSpecification.Tpo $(DEPDIR)/libhdt_la-HDTSpecification.Plo
#	$(AM_V_CXX)source='src/hdt/HDTSpecification.cpp' object='libhdt_la-HDTSpecification.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-HDTSpecification.lo `test -f 'src/hdt/HDTSpecification.cpp' || echo '$(srcdir)/'`src/hdt/HDTSpecification.cpp

libhdt_la-HDTFactory.lo: src/hdt/HDTFactory.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-HDTFactory.lo -MD -MP -MF $(DEPDIR)/libhdt_la-HDTFactory.Tpo -c -o libhdt_la-HDTFactory.lo `test -f 'src/hdt/HDTFactory.cpp' || echo '$(srcdir)/'`src/hdt/HDTFactory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-HDTFactory.Tpo $(DEPDIR)/libhdt_la-HDTFactory.Plo
#	$(AM_V_CXX)source='src/hdt/HDTFactory.cpp' object='libhdt_la-HDTFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-HDTFactory.lo `test -f 'src/hdt/HDTFactory.cpp' || echo '$(srcdir)/'`src/hdt/HDTFactory.cpp

libhdt_la-HDTManager.lo: src/hdt/HDTManager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-HDTManager.lo -MD -MP -MF $(DEPDIR)/libhdt_la-HDTManager.Tpo -c -o libhdt_la-HDTManager.lo `test -f 'src/hdt/HDTManager.cpp' || echo '$(srcdir)/'`src/hdt/HDTManager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-HDTManager.Tpo $(DEPDIR)/libhdt_la-HDTManager.Plo
#	$(AM_V_CXX)source='src/hdt/HDTManager.cpp' object='libhdt_la-HDTManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-HDTManager.lo `test -f 'src/hdt/HDTManager.cpp' || echo '$(srcdir)/'`src/hdt/HDTManager.cpp

libhdt_la-ControlInformation.lo: src/hdt/ControlInformation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-ControlInformation.lo -MD -MP -MF $(DEPDIR)/libhdt_la-ControlInformation.Tpo -c -o libhdt_la-ControlInformation.lo `test -f 'src/hdt/ControlInformation.cpp' || echo '$(srcdir)/'`src/hdt/ControlInformation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-ControlInformation.Tpo $(DEPDIR)/libhdt_la-ControlInformation.Plo
#	$(AM_V_CXX)source='src/hdt/ControlInformation.cpp' object='libhdt_la-ControlInformation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-ControlInformation.lo `test -f 'src/hdt/ControlInformation.cpp' || echo '$(srcdir)/'`src/hdt/ControlInformation.cpp

libhdt_la-BasicHDT.lo: src/hdt/BasicHDT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-BasicHDT.lo -MD -MP -MF $(DEPDIR)/libhdt_la-BasicHDT.Tpo -c -o libhdt_la-BasicHDT.lo `test -f 'src/hdt/BasicHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicHDT.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-BasicHDT.Tpo $(DEPDIR)/libhdt_la-BasicHDT.Plo
#	$(AM_V_CXX)source='src/hdt/BasicHDT.cpp' object='libhdt_la-BasicHDT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-BasicHDT.lo `test -f 'src/hdt/BasicHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicHDT.cpp

libhdt_la-StopWatch.lo: src/util/StopWatch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-StopWatch.lo -MD -MP -MF $(DEPDIR)/libhdt_la-StopWatch.Tpo -c -o libhdt_la-StopWatch.lo `test -f 'src/util/StopWatch.cpp' || echo '$(srcdir)/'`src/util/StopWatch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-StopWatch.Tpo $(DEPDIR)/libhdt_la-StopWatch.Plo
#	$(AM_V_CXX)source='src/util/StopWatch.cpp' object='libhdt_la-StopWatch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-StopWatch.lo `test -f 'src/util/StopWatch.cpp' || echo '$(srcdir)/'`src/util/StopWatch.cpp

libhdt_la-propertyutil.lo: src/util/propertyutil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-propertyutil.lo -MD -MP -MF $(DEPDIR)/libhdt_la-propertyutil.Tpo -c -o libhdt_la-propertyutil.lo `test -f 'src/util/propertyutil.cpp' || echo '$(srcdir)/'`src/util/propertyutil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-propertyutil.Tpo $(DEPDIR)/libhdt_la-propertyutil.Plo
#	$(AM_V_CXX)source='src/util/propertyutil.cpp' object='libhdt_la-propertyutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-propertyutil.lo `test -f 'src/util/propertyutil.cpp' || echo '$(srcdir)/'`src/util/propertyutil.cpp

libhdt_la-TriplesList.lo: src/triples/TriplesList.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TriplesList.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TriplesList.Tpo -c -o libhdt_la-TriplesList.lo `test -f 'src/triples/TriplesList.cpp' || echo '$(srcdir)/'`src/triples/TriplesList.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TriplesList.Tpo $(DEPDIR)/libhdt_la-TriplesList.Plo
#	$(AM_V_CXX)source='src/triples/TriplesList.cpp' object='libhdt_la-TriplesList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TriplesList.lo `test -f 'src/triples/TriplesList.cpp' || echo '$(srcdir)/'`src/triples/TriplesList.cpp

libhdt_la-TriplesComparator.lo: src/triples/TriplesComparator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TriplesComparator.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TriplesComparator.Tpo -c -o libhdt_la-TriplesComparator.lo `test -f 'src/triples/TriplesComparator.cpp' || echo '$(srcdir)/'`src/triples/TriplesComparator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TriplesComparator.Tpo $(DEPDIR)/libhdt_la-TriplesComparator.Plo
#	$(AM_V_CXX)source='src/triples/TriplesComparator.cpp' object='libhdt_la-TriplesComparator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TriplesComparator.lo `test -f 'src/triples/TriplesComparator.cpp' || echo '$(srcdir)/'`src/triples/TriplesComparator.cpp

libhdt_la-TripleOrderConvert.lo: src/triples/TripleOrderConvert.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TripleOrderConvert.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TripleOrderConvert.Tpo -c -o libhdt_la-TripleOrderConvert.lo `test -f 'src/triples/TripleOrderConvert.cpp' || echo '$(srcdir)/'`src/triples/TripleOrderConvert.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TripleOrderConvert.Tpo $(DEPDIR)/libhdt_la-TripleOrderConvert.Plo
#	$(AM_V_CXX)source='src/triples/TripleOrderConvert.cpp' object='libhdt_la-TripleOrderConvert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TripleOrderConvert.lo `test -f 'src/triples/TripleOrderConvert.cpp' || echo '$(srcdir)/'`src/triples/TripleOrderConvert.cpp

libhdt_la-TripleIterators.lo: src/triples/TripleIterators.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TripleIterators.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TripleIterators.Tpo -c -o libhdt_la-TripleIterators.lo `test -f 'src/triples/TripleIterators.cpp' || echo '$(srcdir)/'`src/triples/TripleIterators.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TripleIterators.Tpo $(DEPDIR)/libhdt_la-TripleIterators.Plo
#	$(AM_V_CXX)source='src/triples/TripleIterators.cpp' object='libhdt_la-TripleIterators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TripleIterators.lo `test -f 'src/triples/TripleIterators.cpp' || echo '$(srcdir)/'`src/triples/TripleIterators.cpp

libhdt_la-PlainTriples.lo: src/triples/PlainTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-PlainTriples.lo -MD -MP -MF $(DEPDIR)/libhdt_la-PlainTriples.Tpo -c -o libhdt_la-PlainTriples.lo `test -f 'src/triples/PlainTriples.cpp' || echo '$(srcdir)/'`src/triples/PlainTriples.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-PlainTriples.Tpo $(DEPDIR)/libhdt_la-PlainTriples.Plo
#	$(AM_V_CXX)source='src/triples/PlainTriples.cpp' object='libhdt_la-PlainTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-PlainTriples.lo `test -f 'src/triples/PlainTriples.cpp' || echo '$(srcdir)/'`src/triples/PlainTriples.cpp

libhdt_la-CompactTriples.lo: src/triples/CompactTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CompactTriples.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CompactTriples.Tpo -c -o libhdt_la-CompactTriples.lo `test -f 'src/triples/CompactTriples.cpp' || echo '$(srcdir)/'`src/triples/CompactTriples.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CompactTriples.Tpo $(DEPDIR)/libhdt_la-CompactTriples.Plo
#	$(AM_V_CXX)source='src/triples/CompactTriples.cpp' object='libhdt_la-CompactTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CompactTriples.lo `test -f 'src/triples/CompactTriples.cpp' || echo '$(srcdir)/'`src/triples/CompactTriples.cpp

libhdt_la-BitmapTriples.lo: src/triples/BitmapTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-BitmapTriples.lo -MD -MP -MF $(DEPDIR)/libhdt_la-BitmapTriples.Tpo -c -o libhdt_la-BitmapTriples.lo `test -f 'src/triples/BitmapTriples.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriples.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-BitmapTriples.Tpo $(DEPDIR)/libhdt_la-BitmapTriples.Plo
#	$(AM_V_CXX)source='src/triples/BitmapTriples.cpp' object='libhdt_la-BitmapTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-BitmapTriples.lo `test -f 'src/triples/BitmapTriples.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriples.cpp

libhdt_la-BitmapTriplesIterators.lo: src/triples/BitmapTriplesIterators.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-BitmapTriplesIterators.lo -MD -MP -MF $(DEPDIR)/libhdt_la-BitmapTriplesIterators.Tpo -c -o libhdt_la-BitmapTriplesIterators.lo `test -f 'src/triples/BitmapTriplesIterators.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriplesIterators.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-BitmapTriplesIterators.Tpo $(DEPDIR)/libhdt_la-BitmapTriplesIterators.Plo
#	$(AM_V_CXX)source='src/triples/BitmapTriplesIterators.cpp' object='libhdt_la-BitmapTriplesIterators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-BitmapTriplesIterators.lo `test -f 'src/triples/BitmapTriplesIterators.cpp' || echo '$(srcdir)/'`src/triples/BitmapTriplesIterators.cpp

libhdt_la-TripleListDisk.lo: src/triples/TripleListDisk.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TripleListDisk.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TripleListDisk.Tpo -c -o libhdt_la-TripleListDisk.lo `test -f 'src/triples/TripleListDisk.cpp' || echo '$(srcdir)/'`src/triples/TripleListDisk.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TripleListDisk.Tpo $(DEPDIR)/libhdt_la-TripleListDisk.Plo
#	$(AM_V_CXX)source='src/triples/TripleListDisk.cpp' object='libhdt_la-TripleListDisk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TripleListDisk.lo `test -f 'src/triples/TripleListDisk.cpp' || echo '$(srcdir)/'`src/triples/TripleListDisk.cpp

libhdt_la-TriplesKyoto.lo: src/triples/TriplesKyoto.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TriplesKyoto.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TriplesKyoto.Tpo -c -o libhdt_la-TriplesKyoto.lo `test -f 'src/triples/TriplesKyoto.cpp' || echo '$(srcdir)/'`src/triples/TriplesKyoto.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TriplesKyoto.Tpo $(DEPDIR)/libhdt_la-TriplesKyoto.Plo
#	$(AM_V_CXX)source='src/triples/TriplesKyoto.cpp' object='libhdt_la-TriplesKyoto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TriplesKyoto.lo `test -f 'src/triples/TriplesKyoto.cpp' || echo '$(srcdir)/'`src/triples/TriplesKyoto.cpp

libhdt_la-Huffman.lo: src/huffman/Huffman.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-Huffman.lo -MD -MP -MF $(DEPDIR)/libhdt_la-Huffman.Tpo -c -o libhdt_la-Huffman.lo `test -f 'src/huffman/Huffman.cpp' || echo '$(srcdir)/'`src/huffman/Huffman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-Huffman.Tpo $(DEPDIR)/libhdt_la-Huffman.Plo
#	$(AM_V_CXX)source='src/huffman/Huffman.cpp' object='libhdt_la-Huffman.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-Huffman.lo `test -f 'src/huffman/Huffman.cpp' || echo '$(srcdir)/'`src/huffman/Huffman.cpp

libhdt_la-huff.lo: src/huffman/huff.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-huff.lo -MD -MP -MF $(DEPDIR)/libhdt_la-huff.Tpo -c -o libhdt_la-huff.lo `test -f 'src/huffman/huff.cpp' || echo '$(srcdir)/'`src/huffman/huff.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-huff.Tpo $(DEPDIR)/libhdt_la-huff.Plo
#	$(AM_V_CXX)source='src/huffman/huff.cpp' object='libhdt_la-huff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-huff.lo `test -f 'src/huffman/huff.cpp' || echo '$(srcdir)/'`src/huffman/huff.cpp

libhdt_la-PlainHeader.lo: src/header/PlainHeader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-PlainHeader.lo -MD -MP -MF $(DEPDIR)/libhdt_la-PlainHeader.Tpo -c -o libhdt_la-PlainHeader.lo `test -f 'src/header/PlainHeader.cpp' || echo '$(srcdir)/'`src/header/PlainHeader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-PlainHeader.Tpo $(DEPDIR)/libhdt_la-PlainHeader.Plo
#	$(AM_V_CXX)source='src/header/PlainHeader.cpp' object='libhdt_la-PlainHeader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-PlainHeader.lo `test -f 'src/header/PlainHeader.cpp' || echo '$(srcdir)/'`src/header/PlainHeader.cpp

libhdt_la-VByte.lo: src/libdcs/VByte.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-VByte.lo -MD -MP -MF $(DEPDIR)/libhdt_la-VByte.Tpo -c -o libhdt_la-VByte.lo `test -f 'src/libdcs/VByte.cpp' || echo '$(srcdir)/'`src/libdcs/VByte.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-VByte.Tpo $(DEPDIR)/libhdt_la-VByte.Plo
#	$(AM_V_CXX)source='src/libdcs/VByte.cpp' object='libhdt_la-VByte.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-VByte.lo `test -f 'src/libdcs/VByte.cpp' || echo '$(srcdir)/'`src/libdcs/VByte.cpp

libhdt_la-CSD.lo: src/libdcs/CSD.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CSD.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CSD.Tpo -c -o libhdt_la-CSD.lo `test -f 'src/libdcs/CSD.cpp' || echo '$(srcdir)/'`src/libdcs/CSD.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CSD.Tpo $(DEPDIR)/libhdt_la-CSD.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD.cpp' object='libhdt_la-CSD.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CSD.lo `test -f 'src/libdcs/CSD.cpp' || echo '$(srcdir)/'`src/libdcs/CSD.cpp

libhdt_la-CSD_PFC.lo: src/libdcs/CSD_PFC.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CSD_PFC.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CSD_PFC.Tpo -c -o libhdt_la-CSD_PFC.lo `test -f 'src/libdcs/CSD_PFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_PFC.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CSD_PFC.Tpo $(DEPDIR)/libhdt_la-CSD_PFC.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_PFC.cpp' object='libhdt_la-CSD_PFC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CSD_PFC.lo `test -f 'src/libdcs/CSD_PFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_PFC.cpp

libhdt_la-CSD_HTFC.lo: src/libdcs/CSD_HTFC.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CSD_HTFC.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CSD_HTFC.Tpo -c -o libhdt_la-CSD_HTFC.lo `test -f 'src/libdcs/CSD_HTFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_HTFC.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CSD_HTFC.Tpo $(DEPDIR)/libhdt_la-CSD_HTFC.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_HTFC.cpp' object='libhdt_la-CSD_HTFC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CSD_HTFC.lo `test -f 'src/libdcs/CSD_HTFC.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_HTFC.cpp

libhdt_la-CSD_FMIndex.lo: src/libdcs/CSD_FMIndex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CSD_FMIndex.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CSD_FMIndex.Tpo -c -o libhdt_la-CSD_FMIndex.lo `test -f 'src/libdcs/CSD_FMIndex.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_FMIndex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CSD_FMIndex.Tpo $(DEPDIR)/libhdt_la-CSD_FMIndex.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_FMIndex.cpp' object='libhdt_la-CSD_FMIndex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CSD_FMIndex.lo `test -f 'src/libdcs/CSD_FMIndex.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_FMIndex.cpp

libhdt_la-CSD_Cache2.lo: src/libdcs/CSD_Cache2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CSD_Cache2.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CSD_Cache2.Tpo -c -o libhdt_la-CSD_Cache2.lo `test -f 'src/libdcs/CSD_Cache2.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CSD_Cache2.Tpo $(DEPDIR)/libhdt_la-CSD_Cache2.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_Cache2.cpp' object='libhdt_la-CSD_Cache2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CSD_Cache2.lo `test -f 'src/libdcs/CSD_Cache2.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache2.cpp

libhdt_la-CSD_Cache.lo: src/libdcs/CSD_Cache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-CSD_Cache.lo -MD -MP -MF $(DEPDIR)/libhdt_la-CSD_Cache.Tpo -c -o libhdt_la-CSD_Cache.lo `test -f 'src/libdcs/CSD_Cache.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-CSD_Cache.Tpo $(DEPDIR)/libhdt_la-CSD_Cache.Plo
#	$(AM_V_CXX)source='src/libdcs/CSD_Cache.cpp' object='libhdt_la-CSD_Cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-CSD_Cache.lo `test -f 'src/libdcs/CSD_Cache.cpp' || echo '$(srcdir)/'`src/libdcs/CSD_Cache.cpp

libhdt_la-SuffixArray.lo: src/libdcs/fmindex/SuffixArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-SuffixArray.lo -MD -MP -MF $(DEPDIR)/libhdt_la-SuffixArray.Tpo -c -o libhdt_la-SuffixArray.lo `test -f 'src/libdcs/fmindex/SuffixArray.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SuffixArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-SuffixArray.Tpo $(DEPDIR)/libhdt_la-SuffixArray.Plo
#	$(AM_V_CXX)source='src/libdcs/fmindex/SuffixArray.cpp' object='libhdt_la-SuffixArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-SuffixArray.lo `test -f 'src/libdcs/fmindex/SuffixArray.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SuffixArray.cpp

libhdt_la-SSA.lo: src/libdcs/fmindex/SSA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-SSA.lo -MD -MP -MF $(DEPDIR)/libhdt_la-SSA.Tpo -c -o libhdt_la-SSA.lo `test -f 'src/libdcs/fmindex/SSA.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SSA.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-SSA.Tpo $(DEPDIR)/libhdt_la-SSA.Plo
#	$(AM_V_CXX)source='src/libdcs/fmindex/SSA.cpp' object='libhdt_la-SSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-SSA.lo `test -f 'src/libdcs/fmindex/SSA.cpp' || echo '$(srcdir)/'`src/libdcs/fmindex/SSA.cpp

libhdt_la-PlainDictionary.lo: src/dictionary/PlainDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-PlainDictionary.lo -MD -MP -MF $(DEPDIR)/libhdt_la-PlainDictionary.Tpo -c -o libhdt_la-PlainDictionary.lo `test -f 'src/dictionary/PlainDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/PlainDictionary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-PlainDictionary.Tpo $(DEPDIR)/libhdt_la-PlainDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/PlainDictionary.cpp' object='libhdt_la-PlainDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-PlainDictionary.lo `test -f 'src/dictionary/PlainDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/PlainDictionary.cpp

libhdt_la-FourSectionDictionary.lo: src/dictionary/FourSectionDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-FourSectionDictionary.lo -MD -MP -MF $(DEPDIR)/libhdt_la-FourSectionDictionary.Tpo -c -o libhdt_la-FourSectionDictionary.lo `test -f 'src/dictionary/FourSectionDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/FourSectionDictionary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-FourSectionDictionary.Tpo $(DEPDIR)/libhdt_la-FourSectionDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/FourSectionDictionary.cpp' object='libhdt_la-FourSectionDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-FourSectionDictionary.lo `test -f 'src/dictionary/FourSectionDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/FourSectionDictionary.cpp

libhdt_la-KyotoDictionary.lo: src/dictionary/KyotoDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-KyotoDictionary.lo -MD -MP -MF $(DEPDIR)/libhdt_la-KyotoDictionary.Tpo -c -o libhdt_la-KyotoDictionary.lo `test -f 'src/dictionary/KyotoDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/KyotoDictionary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-KyotoDictionary.Tpo $(DEPDIR)/libhdt_la-KyotoDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/KyotoDictionary.cpp' object='libhdt_la-KyotoDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-KyotoDictionary.lo `test -f 'src/dictionary/KyotoDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/KyotoDictionary.cpp

libhdt_la-LiteralDictionary.lo: src/dictionary/LiteralDictionary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-LiteralDictionary.lo -MD -MP -MF $(DEPDIR)/libhdt_la-LiteralDictionary.Tpo -c -o libhdt_la-LiteralDictionary.lo `test -f 'src/dictionary/LiteralDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/LiteralDictionary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-LiteralDictionary.Tpo $(DEPDIR)/libhdt_la-LiteralDictionary.Plo
#	$(AM_V_CXX)source='src/dictionary/LiteralDictionary.cpp' object='libhdt_la-LiteralDictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-LiteralDictionary.lo `test -f 'src/dictionary/LiteralDictionary.cpp' || echo '$(srcdir)/'`src/dictionary/LiteralDictionary.cpp

libhdt_la-RDFParserNtriples.lo: src/rdf/RDFParserNtriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFParserNtriples.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFParserNtriples.Tpo -c -o libhdt_la-RDFParserNtriples.lo `test -f 'src/rdf/RDFParserNtriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserNtriples.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFParserNtriples.Tpo $(DEPDIR)/libhdt_la-RDFParserNtriples.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParserNtriples.cpp' object='libhdt_la-RDFParserNtriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFParserNtriples.lo `test -f 'src/rdf/RDFParserNtriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserNtriples.cpp

libhdt_la-RDFParser.lo: src/rdf/RDFParser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFParser.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFParser.Tpo -c -o libhdt_la-RDFParser.lo `test -f 'src/rdf/RDFParser.cpp' || echo '$(srcdir)/'`src/rdf/RDFParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFParser.Tpo $(DEPDIR)/libhdt_la-RDFParser.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParser.cpp' object='libhdt_la-RDFParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFParser.lo `test -f 'src/rdf/RDFParser.cpp' || echo '$(srcdir)/'`src/rdf/RDFParser.cpp

libhdt_la-RDFSerializerNTriples.lo: src/rdf/RDFSerializerNTriples.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFSerializerNTriples.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFSerializerNTriples.Tpo -c -o libhdt_la-RDFSerializerNTriples.lo `test -f 'src/rdf/RDFSerializerNTriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerNTriples.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFSerializerNTriples.Tpo $(DEPDIR)/libhdt_la-RDFSerializerNTriples.Plo
#	$(AM_V_CXX)source='src/rdf/RDFSerializerNTriples.cpp' object='libhdt_la-RDFSerializerNTriples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFSerializerNTriples.lo `test -f 'src/rdf/RDFSerializerNTriples.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerNTriples.cpp

libhdt_la-RDFSerializerRaptor.lo: src/rdf/RDFSerializerRaptor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFSerializerRaptor.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFSerializerRaptor.Tpo -c -o libhdt_la-RDFSerializerRaptor.lo `test -f 'src/rdf/RDFSerializerRaptor.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerRaptor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFSerializerRaptor.Tpo $(DEPDIR)/libhdt_la-RDFSerializerRaptor.Plo
#	$(AM_V_CXX)source='src/rdf/RDFSerializerRaptor.cpp' object='libhdt_la-RDFSerializerRaptor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFSerializerRaptor.lo `test -f 'src/rdf/RDFSerializerRaptor.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializerRaptor.cpp

libhdt_la-RDFSerializer.lo: src/rdf/RDFSerializer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFSerializer.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFSerializer.Tpo -c -o libhdt_la-RDFSerializer.lo `test -f 'src/rdf/RDFSerializer.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFSerializer.Tpo $(DEPDIR)/libhdt_la-RDFSerializer.Plo
#	$(AM_V_CXX)source='src/rdf/RDFSerializer.cpp' object='libhdt_la-RDFSerializer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFSerializer.lo `test -f 'src/rdf/RDFSerializer.cpp' || echo '$(srcdir)/'`src/rdf/RDFSerializer.cpp

libhdt_la-fileUtil.lo: src/util/fileUtil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-fileUtil.lo -MD -MP -MF $(DEPDIR)/libhdt_la-fileUtil.Tpo -c -o libhdt_la-fileUtil.lo `test -f 'src/util/fileUtil.cpp' || echo '$(srcdir)/'`src/util/fileUtil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-fileUtil.Tpo $(DEPDIR)/libhdt_la-fileUtil.Plo
#	$(AM_V_CXX)source='src/util/fileUtil.cpp' object='libhdt_la-fileUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-fileUtil.lo `test -f 'src/util/fileUtil.cpp' || echo '$(srcdir)/'`src/util/fileUtil.cpp

libhdt_la-RDFParserRaptorCallback.lo: src/rdf/RDFParserRaptorCallback.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFParserRaptorCallback.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFParserRaptorCallback.Tpo -c -o libhdt_la-RDFParserRaptorCallback.lo `test -f 'src/rdf/RDFParserRaptorCallback.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserRaptorCallback.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFParserRaptorCallback.Tpo $(DEPDIR)/libhdt_la-RDFParserRaptorCallback.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParserRaptorCallback.cpp' object='libhdt_la-RDFParserRaptorCallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFParserRaptorCallback.lo `test -f 'src/rdf/RDFParserRaptorCallback.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserRaptorCallback.cpp

libhdt_la-RDFParserSerd.lo: src/rdf/RDFParserSerd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFParserSerd.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFParserSerd.Tpo -c -o libhdt_la-RDFParserSerd.lo `test -f 'src/rdf/RDFParserSerd.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserSerd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFParserSerd.Tpo $(DEPDIR)/libhdt_la-RDFParserSerd.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParserSerd.cpp' object='libhdt_la-RDFParserSerd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFParserSerd.lo `test -f 'src/rdf/RDFParserSerd.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserSerd.cpp

libhdt_la-TriplePatternBinding.lo: src/sparql/TriplePatternBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TriplePatternBinding.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TriplePatternBinding.Tpo -c -o libhdt_la-TriplePatternBinding.lo `test -f 'src/sparql/TriplePatternBinding.cpp' || echo '$(srcdir)/'`src/sparql/TriplePatternBinding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TriplePatternBinding.Tpo $(DEPDIR)/libhdt_la-TriplePatternBinding.Plo
#	$(AM_V_CXX)source='src/sparql/TriplePatternBinding.cpp' object='libhdt_la-TriplePatternBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TriplePatternBinding.lo `test -f 'src/sparql/TriplePatternBinding.cpp' || echo '$(srcdir)/'`src/sparql/TriplePatternBinding.cpp

libhdt_la-MergeJoinBinding.lo: src/sparql/MergeJoinBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-MergeJoinBinding.lo -MD -MP -MF $(DEPDIR)/libhdt_la-MergeJoinBinding.Tpo -c -o libhdt_la-MergeJoinBinding.lo `test -f 'src/sparql/MergeJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/MergeJoinBinding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-MergeJoinBinding.Tpo $(DEPDIR)/libhdt_la-MergeJoinBinding.Plo
#	$(AM_V_CXX)source='src/sparql/MergeJoinBinding.cpp' object='libhdt_la-MergeJoinBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-MergeJoinBinding.lo `test -f 'src/sparql/MergeJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/MergeJoinBinding.cpp

libhdt_la-JoinAlgorithms.lo: src/sparql/JoinAlgorithms.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-JoinAlgorithms.lo -MD -MP -MF $(DEPDIR)/libhdt_la-JoinAlgorithms.Tpo -c -o libhdt_la-JoinAlgorithms.lo `test -f 'src/sparql/JoinAlgorithms.cpp' || echo '$(srcdir)/'`src/sparql/JoinAlgorithms.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-JoinAlgorithms.Tpo $(DEPDIR)/libhdt_la-JoinAlgorithms.Plo
#	$(AM_V_CXX)source='src/sparql/JoinAlgorithms.cpp' object='libhdt_la-JoinAlgorithms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-JoinAlgorithms.lo `test -f 'src/sparql/JoinAlgorithms.cpp' || echo '$(srcdir)/'`src/sparql/JoinAlgorithms.cpp

libhdt_la-IndexJoinBinding.lo: src/sparql/IndexJoinBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-IndexJoinBinding.lo -MD -MP -MF $(DEPDIR)/libhdt_la-IndexJoinBinding.Tpo -c -o libhdt_la-IndexJoinBinding.lo `test -f 'src/sparql/IndexJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/IndexJoinBinding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-IndexJoinBinding.Tpo $(DEPDIR)/libhdt_la-IndexJoinBinding.Plo
#	$(AM_V_CXX)source='src/sparql/IndexJoinBinding.cpp' object='libhdt_la-IndexJoinBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-IndexJoinBinding.lo `test -f 'src/sparql/IndexJoinBinding.cpp' || echo '$(srcdir)/'`src/sparql/IndexJoinBinding.cpp

libhdt_la-SortBinding.lo: src/sparql/SortBinding.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-SortBinding.lo -MD -MP -MF $(DEPDIR)/libhdt_la-SortBinding.Tpo -c -o libhdt_la-SortBinding.lo `test -f 'src/sparql/SortBinding.cpp' || echo '$(srcdir)/'`src/sparql/SortBinding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-SortBinding.Tpo $(DEPDIR)/libhdt_la-SortBinding.Plo
#	$(AM_V_CXX)source='src/sparql/SortBinding.cpp' object='libhdt_la-SortBinding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-SortBinding.lo `test -f 'src/sparql/SortBinding.cpp' || echo '$(srcdir)/'`src/sparql/SortBinding.cpp

libhdt_la-WaveletSequence.lo: src/sequence/WaveletSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-WaveletSequence.lo -MD -MP -MF $(DEPDIR)/libhdt_la-WaveletSequence.Tpo -c -o libhdt_la-WaveletSequence.lo `test -f 'src/sequence/WaveletSequence.cpp' || echo '$(srcdir)/'`src/sequence/WaveletSequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-WaveletSequence.Tpo $(DEPDIR)/libhdt_la-WaveletSequence.Plo
#	$(AM_V_CXX)source='src/sequence/WaveletSequence.cpp' object='libhdt_la-WaveletSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-WaveletSequence.lo `test -f 'src/sequence/WaveletSequence.cpp' || echo '$(srcdir)/'`src/sequence/WaveletSequence.cpp

libhdt_la-LogSequence2.lo: src/sequence/LogSequence2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-LogSequence2.lo -MD -MP -MF $(DEPDIR)/libhdt_la-LogSequence2.Tpo -c -o libhdt_la-LogSequence2.lo `test -f 'src/sequence/LogSequence2.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-LogSequence2.Tpo $(DEPDIR)/libhdt_la-LogSequence2.Plo
#	$(AM_V_CXX)source='src/sequence/LogSequence2.cpp' object='libhdt_la-LogSequence2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-LogSequence2.lo `test -f 'src/sequence/LogSequence2.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence2.cpp

libhdt_la-LogSequence.lo: src/sequence/LogSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-LogSequence.lo -MD -MP -MF $(DEPDIR)/libhdt_la-LogSequence.Tpo -c -o libhdt_la-LogSequence.lo `test -f 'src/sequence/LogSequence.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-LogSequence.Tpo $(DEPDIR)/libhdt_la-LogSequence.Plo
#	$(AM_V_CXX)source='src/sequence/LogSequence.cpp' object='libhdt_la-LogSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-LogSequence.lo `test -f 'src/sequence/LogSequence.cpp' || echo '$(srcdir)/'`src/sequence/LogSequence.cpp

libhdt_la-IntSequence.lo: src/sequence/IntSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-IntSequence.lo -MD -MP -MF $(DEPDIR)/libhdt_la-IntSequence.Tpo -c -o libhdt_la-IntSequence.lo `test -f 'src/sequence/IntSequence.cpp' || echo '$(srcdir)/'`src/sequence/IntSequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-IntSequence.Tpo $(DEPDIR)/libhdt_la-IntSequence.Plo
#	$(AM_V_CXX)source='src/sequence/IntSequence.cpp' object='libhdt_la-IntSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-IntSequence.lo `test -f 'src/sequence/IntSequence.cpp' || echo '$(srcdir)/'`src/sequence/IntSequence.cpp

libhdt_la-HuffmanSequence.lo: src/sequence/HuffmanSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-HuffmanSequence.lo -MD -MP -MF $(DEPDIR)/libhdt_la-HuffmanSequence.Tpo -c -o libhdt_la-HuffmanSequence.lo `test -f 'src/sequence/HuffmanSequence.cpp' || echo '$(srcdir)/'`src/sequence/HuffmanSequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-HuffmanSequence.Tpo $(DEPDIR)/libhdt_la-HuffmanSequence.Plo
#	$(AM_V_CXX)source='src/sequence/HuffmanSequence.cpp' object='libhdt_la-HuffmanSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-HuffmanSequence.lo `test -f 'src/sequence/HuffmanSequence.cpp' || echo '$(srcdir)/'`src/sequence/HuffmanSequence.cpp

libhdt_la-ArraySequence.lo: src/sequence/ArraySequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-ArraySequence.lo -MD -MP -MF $(DEPDIR)/libhdt_la-ArraySequence.Tpo -c -o libhdt_la-ArraySequence.lo `test -f 'src/sequence/ArraySequence.cpp' || echo '$(srcdir)/'`src/sequence/ArraySequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-ArraySequence.Tpo $(DEPDIR)/libhdt_la-ArraySequence.Plo
#	$(AM_V_CXX)source='src/sequence/ArraySequence.cpp' object='libhdt_la-ArraySequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-ArraySequence.lo `test -f 'src/sequence/ArraySequence.cpp' || echo '$(srcdir)/'`src/sequence/ArraySequence.cpp

libhdt_la-AdjacencyList.lo: src/sequence/AdjacencyList.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-AdjacencyList.lo -MD -MP -MF $(DEPDIR)/libhdt_la-AdjacencyList.Tpo -c -o libhdt_la-AdjacencyList.lo `test -f 'src/sequence/AdjacencyList.cpp' || echo '$(srcdir)/'`src/sequence/AdjacencyList.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-AdjacencyList.Tpo $(DEPDIR)/libhdt_la-AdjacencyList.Plo
#	$(AM_V_CXX)source='src/sequence/AdjacencyList.cpp' object='libhdt_la-AdjacencyList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-AdjacencyList.lo `test -f 'src/sequence/AdjacencyList.cpp' || echo '$(srcdir)/'`src/sequence/AdjacencyList.cpp

libhdt_la-TripleIDStringIterator.lo: src/hdt/TripleIDStringIterator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-TripleIDStringIterator.lo -MD -MP -MF $(DEPDIR)/libhdt_la-TripleIDStringIterator.Tpo -c -o libhdt_la-TripleIDStringIterator.lo `test -f 'src/hdt/TripleIDStringIterator.cpp' || echo '$(srcdir)/'`src/hdt/TripleIDStringIterator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-TripleIDStringIterator.Tpo $(DEPDIR)/libhdt_la-TripleIDStringIterator.Plo
#	$(AM_V_CXX)source='src/hdt/TripleIDStringIterator.cpp' object='libhdt_la-TripleIDStringIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-TripleIDStringIterator.lo `test -f 'src/hdt/TripleIDStringIterator.cpp' || echo '$(srcdir)/'`src/hdt/TripleIDStringIterator.cpp

libhdt_la-BasicModifiableHDT.lo: src/hdt/BasicModifiableHDT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-BasicModifiableHDT.lo -MD -MP -MF $(DEPDIR)/libhdt_la-BasicModifiableHDT.Tpo -c -o libhdt_la-BasicModifiableHDT.lo `test -f 'src/hdt/BasicModifiableHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicModifiableHDT.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-BasicModifiableHDT.Tpo $(DEPDIR)/libhdt_la-BasicModifiableHDT.Plo
#	$(AM_V_CXX)source='src/hdt/BasicModifiableHDT.cpp' object='libhdt_la-BasicModifiableHDT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-BasicModifiableHDT.lo `test -f 'src/hdt/BasicModifiableHDT.cpp' || echo '$(srcdir)/'`src/hdt/BasicModifiableHDT.cpp

libhdt_la-QueryProcessor.lo: src/sparql/QueryProcessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-QueryProcessor.lo -MD -MP -MF $(DEPDIR)/libhdt_la-QueryProcessor.Tpo -c -o libhdt_la-QueryProcessor.lo `test -f 'src/sparql/QueryProcessor.cpp' || echo '$(srcdir)/'`src/sparql/QueryProcessor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-QueryProcessor.Tpo $(DEPDIR)/libhdt_la-QueryProcessor.Plo
#	$(AM_V_CXX)source='src/sparql/QueryProcessor.cpp' object='libhdt_la-QueryProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-QueryProcessor.lo `test -f 'src/sparql/QueryProcessor.cpp' || echo '$(srcdir)/'`src/sparql/QueryProcessor.cpp

libhdt_la-BitSequence375.lo: src/bitsequence/BitSequence375.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-BitSequence375.lo -MD -MP -MF $(DEPDIR)/libhdt_la-BitSequence375.Tpo -c -o libhdt_la-BitSequence375.lo `test -f 'src/bitsequence/BitSequence375.cpp' || echo '$(srcdir)/'`src/bitsequence/BitSequence375.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-BitSequence375.Tpo $(DEPDIR)/libhdt_la-BitSequence375.Plo
#	$(AM_V_CXX)source='src/bitsequence/BitSequence375.cpp' object='libhdt_la-BitSequence375.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-BitSequence375.lo `test -f 'src/bitsequence/BitSequence375.cpp' || echo '$(srcdir)/'`src/bitsequence/BitSequence375.cpp

libhdt_la-crc32.lo: src/util/crc32.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-crc32.lo -MD -MP -MF $(DEPDIR)/libhdt_la-crc32.Tpo -c -o libhdt_la-crc32.lo `test -f 'src/util/crc32.cpp' || echo '$(srcdir)/'`src/util/crc32.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-crc32.Tpo $(DEPDIR)/libhdt_la-crc32.Plo
#	$(AM_V_CXX)source='src/util/crc32.cpp' object='libhdt_la-crc32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-crc32.lo `test -f 'src/util/crc32.cpp' || echo '$(srcdir)/'`src/util/crc32.cpp

libhdt_la-crc16.lo: src/util/crc16.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-crc16.lo -MD -MP -MF $(DEPDIR)/libhdt_la-crc16.Tpo -c -o libhdt_la-crc16.lo `test -f 'src/util/crc16.cpp' || echo '$(srcdir)/'`src/util/crc16.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-crc16.Tpo $(DEPDIR)/libhdt_la-crc16.Plo
#	$(AM_V_CXX)source='src/util/crc16.cpp' object='libhdt_la-crc16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-crc16.lo `test -f 'src/util/crc16.cpp' || echo '$(srcdir)/'`src/util/crc16.cpp

libhdt_la-crc8.lo: src/util/crc8.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-crc8.lo -MD -MP -MF $(DEPDIR)/libhdt_la-crc8.Tpo -c -o libhdt_la-crc8.lo `test -f 'src/util/crc8.cpp' || echo '$(srcdir)/'`src/util/crc8.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-crc8.Tpo $(DEPDIR)/libhdt_la-crc8.Plo
#	$(AM_V_CXX)source='src/util/crc8.cpp' object='libhdt_la-crc8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-crc8.lo `test -f 'src/util/crc8.cpp' || echo '$(srcdir)/'`src/util/crc8.cpp

libhdt_la-bitutil.lo: src/util/bitutil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-bitutil.lo -MD -MP -MF $(DEPDIR)/libhdt_la-bitutil.Tpo -c -o libhdt_la-bitutil.lo `test -f 'src/util/bitutil.cpp' || echo '$(srcdir)/'`src/util/bitutil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-bitutil.Tpo $(DEPDIR)/libhdt_la-bitutil.Plo
#	$(AM_V_CXX)source='src/util/bitutil.cpp' object='libhdt_la-bitutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-bitutil.lo `test -f 'src/util/bitutil.cpp' || echo '$(srcdir)/'`src/util/bitutil.cpp

libhdt_la-filemap.lo: src/util/filemap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-filemap.lo -MD -MP -MF $(DEPDIR)/libhdt_la-filemap.Tpo -c -o libhdt_la-filemap.lo `test -f 'src/util/filemap.cpp' || echo '$(srcdir)/'`src/util/filemap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-filemap.Tpo $(DEPDIR)/libhdt_la-filemap.Plo
#	$(AM_V_CXX)source='src/util/filemap.cpp' object='libhdt_la-filemap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-filemap.lo `test -f 'src/util/filemap.cpp' || echo '$(srcdir)/'`src/util/filemap.cpp

libhdt_la-gzstream.lo: third/gzstream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-gzstream.lo -MD -MP -MF $(DEPDIR)/libhdt_la-gzstream.Tpo -c -o libhdt_la-gzstream.lo `test -f 'third/gzstream.cpp' || echo '$(srcdir)/'`third/gzstream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-gzstream.Tpo $(DEPDIR)/libhdt_la-gzstream.Plo
#	$(AM_V_CXX)source='third/gzstream.cpp' object='libhdt_la-gzstream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-gzstream.lo `test -f 'third/gzstream.cpp' || echo '$(srcdir)/'`third/gzstream.cpp

libhdt_la-RDFParserNtriplesCallback.lo: src/rdf/RDFParserNtriplesCallback.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-RDFParserNtriplesCallback.lo -MD -MP -MF $(DEPDIR)/libhdt_la-RDFParserNtriplesCallback.Tpo -c -o libhdt_la-RDFParserNtriplesCallback.lo `test -f 'src/rdf/RDFParserNtriplesCallback.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserNtriplesCallback.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-RDFParserNtriplesCallback.Tpo $(DEPDIR)/libhdt_la-RDFParserNtriplesCallback.Plo
#	$(AM_V_CXX)source='src/rdf/RDFParserNtriplesCallback.cpp' object='libhdt_la-RDFParserNtriplesCallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-RDFParserNtriplesCallback.lo `test -f 'src/rdf/RDFParserNtriplesCallback.cpp' || echo '$(srcdir)/'`src/rdf/RDFParserNtriplesCallback.cpp

libhdt_la-predicateindex.lo: src/triples/predicateindex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhdt_la-predicateindex.lo -MD -MP -MF $(DEPDIR)/libhdt_la-predicateindex.Tpo -c -o libhdt_la-predicateindex.lo `test -f 'src/triples/predicateindex.cpp' || echo '$(srcdir)/'`src/triples/predicateindex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhdt_la-predicateindex.Tpo $(DEPDIR)/libhdt_la-predicateindex.Plo
#	$(AM_V_CXX)source='src/triples/predicateindex.cpp' object='libhdt_la-predicateindex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhdt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhdt_la-predicateindex.lo `test -f 'src/triples/predicateindex.cpp' || echo '$(srcdir)/'`src/triples/predicateindex.cpp

hdt2rdf-hdt2rdf.o: tools/hdt2rdf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdt2rdf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdt2rdf-hdt2rdf.o -MD -MP -MF $(DEPDIR)/hdt2rdf-hdt2rdf.Tpo -c -o hdt2rdf-hdt2rdf.o `test -f 'tools/hdt2rdf.cpp' || echo '$(srcdir)/'`tools/hdt2rdf.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hdt2rdf-hdt2rdf.Tpo $(DEPDIR)/hdt2rdf-hdt2rdf.Po
#	$(AM_V_CXX)source='tools/hdt2rdf.cpp' object='hdt2rdf-hdt2rdf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdt2rdf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdt2rdf-hdt2rdf.o `test -f 'tools/hdt2rdf.cpp' || echo '$(srcdir)/'`tools/hdt2rdf.cpp

hdt2rdf-hdt2rdf.obj: tools/hdt2rdf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdt2rdf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdt2rdf-hdt2rdf.obj -MD -MP -MF $(DEPDIR)/hdt2rdf-hdt2rdf.Tpo -c -o hdt2rdf-hdt2rdf.obj `if test -f 'tools/hdt2rdf.cpp'; then $(CYGPATH_W) 'tools/hdt2rdf.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/hdt2rdf.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hdt2rdf-hdt2rdf.Tpo $(DEPDIR)/hdt2rdf-hdt2rdf.Po
#	$(AM_V_CXX)source='tools/hdt2rdf.cpp' object='hdt2rdf-hdt2rdf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdt2rdf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdt2rdf-hdt2rdf.obj `if test -f 'tools/hdt2rdf.cpp'; then $(CYGPATH_W) 'tools/hdt2rdf.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/hdt2rdf.cpp'; fi`

hdtInfo-hdtInfo.o: tools/hdtInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtInfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdtInfo-hdtInfo.o -MD -MP -MF $(DEPDIR)/hdtInfo-hdtInfo.Tpo -c -o hdtInfo-hdtInfo.o `test -f 'tools/hdtInfo.cpp' || echo '$(srcdir)/'`tools/hdtInfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hdtInfo-hdtInfo.Tpo $(DEPDIR)/hdtInfo-hdtInfo.Po
#	$(AM_V_CXX)source='tools/hdtInfo.cpp' object='hdtInfo-hdtInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtInfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdtInfo-hdtInfo.o `test -f 'tools/hdtInfo.cpp' || echo '$(srcdir)/'`tools/hdtInfo.cpp

hdtInfo-hdtInfo.obj: tools/hdtInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtInfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdtInfo-hdtInfo.obj -MD -MP -MF $(DEPDIR)/hdtInfo-hdtInfo.Tpo -c -o hdtInfo-hdtInfo.obj `if test -f 'tools/hdtInfo.cpp'; then $(CYGPATH_W) 'tools/hdtInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/hdtInfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hdtInfo-hdtInfo.Tpo $(DEPDIR)/hdtInfo-hdtInfo.Po
#	$(AM_V_CXX)source='tools/hdtInfo.cpp' object='hdtInfo-hdtInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtInfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdtInfo-hdtInfo.obj `if test -f 'tools/hdtInfo.cpp'; then $(CYGPATH_W) 'tools/hdtInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/hdtInfo.cpp'; fi`

hdtSearch-hdtSearch.o: tools/hdtSearch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdtSearch-hdtSearch.o -MD -MP -MF $(DEPDIR)/hdtSearch-hdtSearch.Tpo -c -o hdtSearch-hdtSearch.o `test -f 'tools/hdtSearch.cpp' || echo '$(srcdir)/'`tools/hdtSearch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hdtSearch-hdtSearch.Tpo $(DEPDIR)/hdtSearch-hdtSearch.Po
#	$(AM_V_CXX)source='tools/hdtSearch.cpp' object='hdtSearch-hdtSearch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdtSearch-hdtSearch.o `test -f 'tools/hdtSearch.cpp' || echo '$(srcdir)/'`tools/hdtSearch.cpp

hdtSearch-hdtSearch.obj: tools/hdtSearch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hdtSearch-hdtSearch.obj -MD -MP -MF $(DEPDIR)/hdtSearch-hdtSearch.Tpo -c -o hdtSearch-hdtSearch.obj `if test -f 'tools/hdtSearch.cpp'; then $(CYGPATH_W) 'tools/hdtSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/hdtSearch.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hdtSearch-hdtSearch.Tpo $(DEPDIR)/hdtSearch-hdtSearch.Po
#	$(AM_V_CXX)source='tools/hdtSearch.cpp' object='hdtSearch-hdtSearch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hdtSearch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hdtSearch-hdtSearch.obj `if test -f 'tools/hdtSearch.cpp'; then $(CYGPATH_W) 'tools/hdtSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/hdtSearch.cpp'; fi`

rdf2hdt-rdf2hdt.o: tools/rdf2hdt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rdf2hdt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rdf2hdt-rdf2hdt.o -MD -MP -MF $(DEPDIR)/rdf2hdt-rdf2hdt.Tpo -c -o rdf2hdt-rdf2hdt.o `test -f 'tools/rdf2hdt.cpp' || echo '$(srcdir)/'`tools/rdf2hdt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rdf2hdt-rdf2hdt.Tpo $(DEPDIR)/rdf2hdt-rdf2hdt.Po
#	$(AM_V_CXX)source='tools/rdf2hdt.cpp' object='rdf2hdt-rdf2hdt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rdf2hdt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rdf2hdt-rdf2hdt.o `test -f 'tools/rdf2hdt.cpp' || echo '$(srcdir)/'`tools/rdf2hdt.cpp

rdf2hdt-rdf2hdt.obj: tools/rdf2hdt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rdf2hdt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rdf2hdt-rdf2hdt.obj -MD -MP -MF $(DEPDIR)/rdf2hdt-rdf2hdt.Tpo -c -o rdf2hdt-rdf2hdt.obj `if test -f 'tools/rdf2hdt.cpp'; then $(CYGPATH_W) 'tools/rdf2hdt.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/rdf2hdt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rdf2hdt-rdf2hdt.Tpo $(DEPDIR)/rdf2hdt-rdf2hdt.Po
#	$(AM_V_CXX)source='tools/rdf2hdt.cpp' object='rdf2hdt-rdf2hdt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rdf2hdt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rdf2hdt-rdf2hdt.obj `if test -f 'tools/rdf2hdt.cpp'; then $(CYGPATH_W) 'tools/rdf2hdt.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/rdf2hdt.cpp'; fi`

replaceHeader-replaceHeader.o: tools/replaceHeader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(replaceHeader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT replaceHeader-replaceHeader.o -MD -MP -MF $(DEPDIR)/replaceHeader-replaceHeader.Tpo -c -o replaceHeader-replaceHeader.o `test -f 'tools/replaceHeader.cpp' || echo '$(srcdir)/'`tools/replaceHeader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/replaceHeader-replaceHeader.Tpo $(DEPDIR)/replaceHeader-replaceHeader.Po
#	$(AM_V_CXX)source='tools/replaceHeader.cpp' object='replaceHeader-replaceHeader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(replaceHeader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o replaceHeader-replaceHeader.o `test -f 'tools/replaceHeader.cpp' || echo '$(srcdir)/'`tools/replaceHeader.cpp

replaceHeader-replaceHeader.obj: tools/replaceHeader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(replaceHeader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT replaceHeader-replaceHeader.obj -MD -MP -MF $(DEPDIR)/replaceHeader-replaceHeader.Tpo -c -o replaceHeader-replaceHeader.obj `if test -f 'tools/replaceHeader.cpp'; then $(CYGPATH_W) 'tools/replaceHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/replaceHeader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/replaceHeader-replaceHeader.Tpo $(DEPDIR)/replaceHeader-replaceHeader.Po
#	$(AM_V_CXX)source='tools/replaceHeader.cpp' object='replaceHeader-replaceHeader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(replaceHeader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o replaceHeader-replaceHeader.obj `if test -f 'tools/replaceHeader.cpp'; then $(CYGPATH_W) 'tools/replaceHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/replaceHeader.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
