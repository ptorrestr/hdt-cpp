# Makefile.in generated by automake 1.11.6 from Makefile.am.
# libcds-v1.0.12/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/hdt
pkgincludedir = $(includedir)/hdt
pkglibdir = $(libdir)/hdt
pkglibexecdir = $(libexecdir)/hdt
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = libcds-v1.0.12
DIST_COMMON = README $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcds_la_LIBADD =
am_libcds_la_OBJECTS = libcds_la-cppUtils.lo libcds_la-BitString.lo \
	libcds_la-Array.lo libcds_la-TableOffsetRRR.lo \
	libcds_la-sdarraySadakane.lo libcds_la-BitSequenceSDArray.lo \
	libcds_la-BitSequenceRRR.lo libcds_la-BitSequenceRG.lo \
	libcds_la-BitSequenceDArray.lo \
	libcds_la-BitSequenceBuilderSDArray.lo \
	libcds_la-BitSequenceBuilderRRR.lo \
	libcds_la-BitSequenceBuilderRG.lo \
	libcds_la-BitSequenceBuilderDArray.lo libcds_la-BitSequence.lo \
	libcds_la-MapperNone.lo libcds_la-MapperCont.lo \
	libcds_la-Mapper.lo libcds_la-HuffmanCoder.lo \
	libcds_la-huff.lo libcds_la-PermutationMRRR.lo \
	libcds_la-PermutationBuilderMRRR.lo libcds_la-Permutation.lo \
	libcds_la-perm.lo libcds_la-wt_node.lo \
	libcds_la-wt_node_leaf.lo libcds_la-wt_node_internal.lo \
	libcds_la-wt_coder.lo libcds_la-wt_coder_huff.lo \
	libcds_la-wt_coder_binary.lo libcds_la-WaveletTreeNoptrs.lo \
	libcds_la-WaveletTree.lo libcds_la-SequenceGMRChunk.lo \
	libcds_la-SequenceGMR.lo \
	libcds_la-SequenceBuilderWaveletTreeNoptrs.lo \
	libcds_la-SequenceBuilderWaveletTree.lo \
	libcds_la-SequenceBuilderStr.lo \
	libcds_la-SequenceBuilderGMRChunk.lo \
	libcds_la-SequenceBuilderGMR.lo \
	libcds_la-SequenceBuilderAlphPart.lo \
	libcds_la-SequenceAlphPart.lo libcds_la-Sequence.lo \
	libcds_la-BitmapsSequence.lo libcds_la-timing.lo \
	libcds_la-TextIndexCSA.lo libcds_la-TextIndex.lo \
	libcds_la-suftest3.test.lo libcds_la-qsufsort.lo \
	libcds_la-mmap.lo libcds_la-comparray4.lo \
	libcds_la-SuffixTreeY.lo libcds_la-SuffixTree.lo \
	libcds_la-RMQ_succinct.lo libcds_la-RMQ_succinct_lcp.lo \
	libcds_la-PSV.lo libcds_la-NSV.lo libcds_la-NPR.lo \
	libcds_la-NPR_FMN.lo libcds_la-NPR_CN.lo libcds_la-LCP.lo \
	libcds_la-LCP_Sad.lo libcds_la-LCP_PT.lo \
	libcds_la-LCP_PhiSpare.lo libcds_la-LCP_naive.lo \
	libcds_la-LCP_FMN.lo libcds_la-LCP_DAC.lo \
	libcds_la-LCP_DAC_VAR.lo libcds_la-factorization.lo \
	libcds_la-factorization_var.lo libcds_la-WaveletTreeNoptrsS.lo \
	libcds_la-WaveletMatrix.lo \
	libcds_la-SequenceBuilderWaveletTreeNoptrsS.lo \
	libcds_la-SequenceBuilderWaveletMatrix.lo \
	libcds_la-PermutationWT.lo libcds_la-PermutationBuilderWT.lo \
	libcds_la-MapperRev.lo
libcds_la_OBJECTS = $(am_libcds_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libcds_la_SOURCES)
DIST_SOURCES = $(libcds_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hdt
PACKAGE_BUGREPORT = email@someone.com
PACKAGE_NAME = hdt
PACKAGE_STRING = hdt 1.1.2
PACKAGE_TARNAME = hdt
PACKAGE_URL = 
PACKAGE_VERSION = 1.1.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.1.2
abs_builddir = /home/pabtor/workspace/c++/hdt-cpp/libcds-v1.0.12
abs_srcdir = /home/pabtor/workspace/c++/hdt-cpp/libcds-v1.0.12
abs_top_builddir = /home/pabtor/workspace/c++/hdt-cpp
abs_top_srcdir = /home/pabtor/workspace/c++/hdt-cpp
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pabtor/workspace/c++/hdt-cpp/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/pabtor/root/usr/local/hdt-cpp
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libcds.la
libcds_la_SOURCES = \
src/utils/cppUtils.cpp \
src/utils/BitString.cpp \
src/utils/Array.cpp \
src/static/bitsequence/TableOffsetRRR.cpp \
src/static/bitsequence/sdarraySadakane.cpp \
src/static/bitsequence/BitSequenceSDArray.cpp \
src/static/bitsequence/BitSequenceRRR.cpp \
src/static/bitsequence/BitSequenceRG.cpp \
src/static/bitsequence/BitSequenceDArray.cpp \
src/static/bitsequence/BitSequenceBuilderSDArray.cpp \
src/static/bitsequence/BitSequenceBuilderRRR.cpp \
src/static/bitsequence/BitSequenceBuilderRG.cpp \
src/static/bitsequence/BitSequenceBuilderDArray.cpp \
src/static/bitsequence/BitSequence.cpp \
src/static/mapper/MapperNone.cpp \
src/static/mapper/MapperCont.cpp \
src/static/mapper/Mapper.cpp \
src/static/coders/HuffmanCoder.cpp \
src/static/coders/huff.cpp \
src/static/permutation/PermutationMRRR.cpp \
src/static/permutation/PermutationBuilderMRRR.cpp \
src/static/permutation/Permutation.cpp \
src/static/permutation/perm.cpp \
src/static/sequence/wt_node.cpp \
src/static/sequence/wt_node_leaf.cpp \
src/static/sequence/wt_node_internal.cpp \
src/static/sequence/wt_coder.cpp \
src/static/sequence/wt_coder_huff.cpp \
src/static/sequence/wt_coder_binary.cpp \
src/static/sequence/WaveletTreeNoptrs.cpp \
src/static/sequence/WaveletTree.cpp \
src/static/sequence/SequenceGMRChunk.cpp \
src/static/sequence/SequenceGMR.cpp \
src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp \
src/static/sequence/SequenceBuilderWaveletTree.cpp \
src/static/sequence/SequenceBuilderStr.cpp \
src/static/sequence/SequenceBuilderGMRChunk.cpp \
src/static/sequence/SequenceBuilderGMR.cpp \
src/static/sequence/SequenceBuilderAlphPart.cpp \
src/static/sequence/SequenceAlphPart.cpp \
src/static/sequence/Sequence.cpp \
src/static/sequence/BitmapsSequence.cpp \
src/utils/timing.cpp \
src/static/textindex/TextIndexCSA.cpp \
src/static/textindex/TextIndex.cpp \
src/static/textindex/suftest3.test.cpp \
src/static/textindex/qsufsort.cpp \
src/static/textindex/mmap.cpp \
src/static/textindex/comparray4.cpp \
src/static/suffixtree/SuffixTreeY.cpp \
src/static/suffixtree/SuffixTree.cpp \
src/static/suffixtree/RMQ_succinct.cpp \
src/static/suffixtree/RMQ_succinct_lcp.cpp \
src/static/suffixtree/PSV.cpp \
src/static/suffixtree/NSV.cpp \
src/static/suffixtree/NPR.cpp \
src/static/suffixtree/NPR_FMN.cpp \
src/static/suffixtree/NPR_CN.cpp \
src/static/suffixtree/LCP.cpp \
src/static/suffixtree/LCP_Sad.cpp \
src/static/suffixtree/LCP_PT.cpp \
src/static/suffixtree/LCP_PhiSpare.cpp \
src/static/suffixtree/LCP_naive.cpp \
src/static/suffixtree/LCP_FMN.cpp \
src/static/suffixtree/LCP_DAC.cpp \
src/static/suffixtree/LCP_DAC_VAR.cpp \
src/static/suffixtree/factorization.cpp \
src/static/suffixtree/factorization_var.cpp \
src/static/sequence/WaveletTreeNoptrsS.cpp \
src/static/sequence/WaveletMatrix.cpp \
src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp \
src/static/sequence/SequenceBuilderWaveletMatrix.cpp \
src/static/permutation/PermutationWT.cpp \
src/static/permutation/PermutationBuilderWT.cpp \
src/static/mapper/MapperRev.cpp

libcds_la_CPPFLAGS = -I$(builddir)/includes
pkginclude_HEADERS = includes/*
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libcds-v1.0.12/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libcds-v1.0.12/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcds.la: $(libcds_la_OBJECTS) $(libcds_la_DEPENDENCIES) $(EXTRA_libcds_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libcds_la_OBJECTS) $(libcds_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcds_la-Array.Plo
include ./$(DEPDIR)/libcds_la-BitSequence.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceBuilderDArray.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceBuilderRG.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceBuilderRRR.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceBuilderSDArray.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceDArray.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceRG.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceRRR.Plo
include ./$(DEPDIR)/libcds_la-BitSequenceSDArray.Plo
include ./$(DEPDIR)/libcds_la-BitString.Plo
include ./$(DEPDIR)/libcds_la-BitmapsSequence.Plo
include ./$(DEPDIR)/libcds_la-HuffmanCoder.Plo
include ./$(DEPDIR)/libcds_la-LCP.Plo
include ./$(DEPDIR)/libcds_la-LCP_DAC.Plo
include ./$(DEPDIR)/libcds_la-LCP_DAC_VAR.Plo
include ./$(DEPDIR)/libcds_la-LCP_FMN.Plo
include ./$(DEPDIR)/libcds_la-LCP_PT.Plo
include ./$(DEPDIR)/libcds_la-LCP_PhiSpare.Plo
include ./$(DEPDIR)/libcds_la-LCP_Sad.Plo
include ./$(DEPDIR)/libcds_la-LCP_naive.Plo
include ./$(DEPDIR)/libcds_la-Mapper.Plo
include ./$(DEPDIR)/libcds_la-MapperCont.Plo
include ./$(DEPDIR)/libcds_la-MapperNone.Plo
include ./$(DEPDIR)/libcds_la-MapperRev.Plo
include ./$(DEPDIR)/libcds_la-NPR.Plo
include ./$(DEPDIR)/libcds_la-NPR_CN.Plo
include ./$(DEPDIR)/libcds_la-NPR_FMN.Plo
include ./$(DEPDIR)/libcds_la-NSV.Plo
include ./$(DEPDIR)/libcds_la-PSV.Plo
include ./$(DEPDIR)/libcds_la-Permutation.Plo
include ./$(DEPDIR)/libcds_la-PermutationBuilderMRRR.Plo
include ./$(DEPDIR)/libcds_la-PermutationBuilderWT.Plo
include ./$(DEPDIR)/libcds_la-PermutationMRRR.Plo
include ./$(DEPDIR)/libcds_la-PermutationWT.Plo
include ./$(DEPDIR)/libcds_la-RMQ_succinct.Plo
include ./$(DEPDIR)/libcds_la-RMQ_succinct_lcp.Plo
include ./$(DEPDIR)/libcds_la-Sequence.Plo
include ./$(DEPDIR)/libcds_la-SequenceAlphPart.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderAlphPart.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderGMR.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderGMRChunk.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderStr.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderWaveletMatrix.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderWaveletTree.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrs.Plo
include ./$(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrsS.Plo
include ./$(DEPDIR)/libcds_la-SequenceGMR.Plo
include ./$(DEPDIR)/libcds_la-SequenceGMRChunk.Plo
include ./$(DEPDIR)/libcds_la-SuffixTree.Plo
include ./$(DEPDIR)/libcds_la-SuffixTreeY.Plo
include ./$(DEPDIR)/libcds_la-TableOffsetRRR.Plo
include ./$(DEPDIR)/libcds_la-TextIndex.Plo
include ./$(DEPDIR)/libcds_la-TextIndexCSA.Plo
include ./$(DEPDIR)/libcds_la-WaveletMatrix.Plo
include ./$(DEPDIR)/libcds_la-WaveletTree.Plo
include ./$(DEPDIR)/libcds_la-WaveletTreeNoptrs.Plo
include ./$(DEPDIR)/libcds_la-WaveletTreeNoptrsS.Plo
include ./$(DEPDIR)/libcds_la-comparray4.Plo
include ./$(DEPDIR)/libcds_la-cppUtils.Plo
include ./$(DEPDIR)/libcds_la-factorization.Plo
include ./$(DEPDIR)/libcds_la-factorization_var.Plo
include ./$(DEPDIR)/libcds_la-huff.Plo
include ./$(DEPDIR)/libcds_la-mmap.Plo
include ./$(DEPDIR)/libcds_la-perm.Plo
include ./$(DEPDIR)/libcds_la-qsufsort.Plo
include ./$(DEPDIR)/libcds_la-sdarraySadakane.Plo
include ./$(DEPDIR)/libcds_la-suftest3.test.Plo
include ./$(DEPDIR)/libcds_la-timing.Plo
include ./$(DEPDIR)/libcds_la-wt_coder.Plo
include ./$(DEPDIR)/libcds_la-wt_coder_binary.Plo
include ./$(DEPDIR)/libcds_la-wt_coder_huff.Plo
include ./$(DEPDIR)/libcds_la-wt_node.Plo
include ./$(DEPDIR)/libcds_la-wt_node_internal.Plo
include ./$(DEPDIR)/libcds_la-wt_node_leaf.Plo

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libcds_la-cppUtils.lo: src/utils/cppUtils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-cppUtils.lo -MD -MP -MF $(DEPDIR)/libcds_la-cppUtils.Tpo -c -o libcds_la-cppUtils.lo `test -f 'src/utils/cppUtils.cpp' || echo '$(srcdir)/'`src/utils/cppUtils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-cppUtils.Tpo $(DEPDIR)/libcds_la-cppUtils.Plo
#	$(AM_V_CXX)source='src/utils/cppUtils.cpp' object='libcds_la-cppUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-cppUtils.lo `test -f 'src/utils/cppUtils.cpp' || echo '$(srcdir)/'`src/utils/cppUtils.cpp

libcds_la-BitString.lo: src/utils/BitString.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitString.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitString.Tpo -c -o libcds_la-BitString.lo `test -f 'src/utils/BitString.cpp' || echo '$(srcdir)/'`src/utils/BitString.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitString.Tpo $(DEPDIR)/libcds_la-BitString.Plo
#	$(AM_V_CXX)source='src/utils/BitString.cpp' object='libcds_la-BitString.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitString.lo `test -f 'src/utils/BitString.cpp' || echo '$(srcdir)/'`src/utils/BitString.cpp

libcds_la-Array.lo: src/utils/Array.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-Array.lo -MD -MP -MF $(DEPDIR)/libcds_la-Array.Tpo -c -o libcds_la-Array.lo `test -f 'src/utils/Array.cpp' || echo '$(srcdir)/'`src/utils/Array.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-Array.Tpo $(DEPDIR)/libcds_la-Array.Plo
#	$(AM_V_CXX)source='src/utils/Array.cpp' object='libcds_la-Array.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-Array.lo `test -f 'src/utils/Array.cpp' || echo '$(srcdir)/'`src/utils/Array.cpp

libcds_la-TableOffsetRRR.lo: src/static/bitsequence/TableOffsetRRR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-TableOffsetRRR.lo -MD -MP -MF $(DEPDIR)/libcds_la-TableOffsetRRR.Tpo -c -o libcds_la-TableOffsetRRR.lo `test -f 'src/static/bitsequence/TableOffsetRRR.cpp' || echo '$(srcdir)/'`src/static/bitsequence/TableOffsetRRR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-TableOffsetRRR.Tpo $(DEPDIR)/libcds_la-TableOffsetRRR.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/TableOffsetRRR.cpp' object='libcds_la-TableOffsetRRR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-TableOffsetRRR.lo `test -f 'src/static/bitsequence/TableOffsetRRR.cpp' || echo '$(srcdir)/'`src/static/bitsequence/TableOffsetRRR.cpp

libcds_la-sdarraySadakane.lo: src/static/bitsequence/sdarraySadakane.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-sdarraySadakane.lo -MD -MP -MF $(DEPDIR)/libcds_la-sdarraySadakane.Tpo -c -o libcds_la-sdarraySadakane.lo `test -f 'src/static/bitsequence/sdarraySadakane.cpp' || echo '$(srcdir)/'`src/static/bitsequence/sdarraySadakane.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-sdarraySadakane.Tpo $(DEPDIR)/libcds_la-sdarraySadakane.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/sdarraySadakane.cpp' object='libcds_la-sdarraySadakane.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-sdarraySadakane.lo `test -f 'src/static/bitsequence/sdarraySadakane.cpp' || echo '$(srcdir)/'`src/static/bitsequence/sdarraySadakane.cpp

libcds_la-BitSequenceSDArray.lo: src/static/bitsequence/BitSequenceSDArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceSDArray.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceSDArray.Tpo -c -o libcds_la-BitSequenceSDArray.lo `test -f 'src/static/bitsequence/BitSequenceSDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceSDArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceSDArray.Tpo $(DEPDIR)/libcds_la-BitSequenceSDArray.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceSDArray.cpp' object='libcds_la-BitSequenceSDArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceSDArray.lo `test -f 'src/static/bitsequence/BitSequenceSDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceSDArray.cpp

libcds_la-BitSequenceRRR.lo: src/static/bitsequence/BitSequenceRRR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceRRR.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceRRR.Tpo -c -o libcds_la-BitSequenceRRR.lo `test -f 'src/static/bitsequence/BitSequenceRRR.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceRRR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceRRR.Tpo $(DEPDIR)/libcds_la-BitSequenceRRR.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceRRR.cpp' object='libcds_la-BitSequenceRRR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceRRR.lo `test -f 'src/static/bitsequence/BitSequenceRRR.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceRRR.cpp

libcds_la-BitSequenceRG.lo: src/static/bitsequence/BitSequenceRG.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceRG.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceRG.Tpo -c -o libcds_la-BitSequenceRG.lo `test -f 'src/static/bitsequence/BitSequenceRG.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceRG.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceRG.Tpo $(DEPDIR)/libcds_la-BitSequenceRG.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceRG.cpp' object='libcds_la-BitSequenceRG.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceRG.lo `test -f 'src/static/bitsequence/BitSequenceRG.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceRG.cpp

libcds_la-BitSequenceDArray.lo: src/static/bitsequence/BitSequenceDArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceDArray.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceDArray.Tpo -c -o libcds_la-BitSequenceDArray.lo `test -f 'src/static/bitsequence/BitSequenceDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceDArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceDArray.Tpo $(DEPDIR)/libcds_la-BitSequenceDArray.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceDArray.cpp' object='libcds_la-BitSequenceDArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceDArray.lo `test -f 'src/static/bitsequence/BitSequenceDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceDArray.cpp

libcds_la-BitSequenceBuilderSDArray.lo: src/static/bitsequence/BitSequenceBuilderSDArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceBuilderSDArray.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceBuilderSDArray.Tpo -c -o libcds_la-BitSequenceBuilderSDArray.lo `test -f 'src/static/bitsequence/BitSequenceBuilderSDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderSDArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceBuilderSDArray.Tpo $(DEPDIR)/libcds_la-BitSequenceBuilderSDArray.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceBuilderSDArray.cpp' object='libcds_la-BitSequenceBuilderSDArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceBuilderSDArray.lo `test -f 'src/static/bitsequence/BitSequenceBuilderSDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderSDArray.cpp

libcds_la-BitSequenceBuilderRRR.lo: src/static/bitsequence/BitSequenceBuilderRRR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceBuilderRRR.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceBuilderRRR.Tpo -c -o libcds_la-BitSequenceBuilderRRR.lo `test -f 'src/static/bitsequence/BitSequenceBuilderRRR.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderRRR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceBuilderRRR.Tpo $(DEPDIR)/libcds_la-BitSequenceBuilderRRR.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceBuilderRRR.cpp' object='libcds_la-BitSequenceBuilderRRR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceBuilderRRR.lo `test -f 'src/static/bitsequence/BitSequenceBuilderRRR.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderRRR.cpp

libcds_la-BitSequenceBuilderRG.lo: src/static/bitsequence/BitSequenceBuilderRG.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceBuilderRG.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceBuilderRG.Tpo -c -o libcds_la-BitSequenceBuilderRG.lo `test -f 'src/static/bitsequence/BitSequenceBuilderRG.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderRG.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceBuilderRG.Tpo $(DEPDIR)/libcds_la-BitSequenceBuilderRG.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceBuilderRG.cpp' object='libcds_la-BitSequenceBuilderRG.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceBuilderRG.lo `test -f 'src/static/bitsequence/BitSequenceBuilderRG.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderRG.cpp

libcds_la-BitSequenceBuilderDArray.lo: src/static/bitsequence/BitSequenceBuilderDArray.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequenceBuilderDArray.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequenceBuilderDArray.Tpo -c -o libcds_la-BitSequenceBuilderDArray.lo `test -f 'src/static/bitsequence/BitSequenceBuilderDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderDArray.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequenceBuilderDArray.Tpo $(DEPDIR)/libcds_la-BitSequenceBuilderDArray.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequenceBuilderDArray.cpp' object='libcds_la-BitSequenceBuilderDArray.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequenceBuilderDArray.lo `test -f 'src/static/bitsequence/BitSequenceBuilderDArray.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequenceBuilderDArray.cpp

libcds_la-BitSequence.lo: src/static/bitsequence/BitSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitSequence.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitSequence.Tpo -c -o libcds_la-BitSequence.lo `test -f 'src/static/bitsequence/BitSequence.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitSequence.Tpo $(DEPDIR)/libcds_la-BitSequence.Plo
#	$(AM_V_CXX)source='src/static/bitsequence/BitSequence.cpp' object='libcds_la-BitSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitSequence.lo `test -f 'src/static/bitsequence/BitSequence.cpp' || echo '$(srcdir)/'`src/static/bitsequence/BitSequence.cpp

libcds_la-MapperNone.lo: src/static/mapper/MapperNone.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-MapperNone.lo -MD -MP -MF $(DEPDIR)/libcds_la-MapperNone.Tpo -c -o libcds_la-MapperNone.lo `test -f 'src/static/mapper/MapperNone.cpp' || echo '$(srcdir)/'`src/static/mapper/MapperNone.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-MapperNone.Tpo $(DEPDIR)/libcds_la-MapperNone.Plo
#	$(AM_V_CXX)source='src/static/mapper/MapperNone.cpp' object='libcds_la-MapperNone.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-MapperNone.lo `test -f 'src/static/mapper/MapperNone.cpp' || echo '$(srcdir)/'`src/static/mapper/MapperNone.cpp

libcds_la-MapperCont.lo: src/static/mapper/MapperCont.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-MapperCont.lo -MD -MP -MF $(DEPDIR)/libcds_la-MapperCont.Tpo -c -o libcds_la-MapperCont.lo `test -f 'src/static/mapper/MapperCont.cpp' || echo '$(srcdir)/'`src/static/mapper/MapperCont.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-MapperCont.Tpo $(DEPDIR)/libcds_la-MapperCont.Plo
#	$(AM_V_CXX)source='src/static/mapper/MapperCont.cpp' object='libcds_la-MapperCont.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-MapperCont.lo `test -f 'src/static/mapper/MapperCont.cpp' || echo '$(srcdir)/'`src/static/mapper/MapperCont.cpp

libcds_la-Mapper.lo: src/static/mapper/Mapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-Mapper.lo -MD -MP -MF $(DEPDIR)/libcds_la-Mapper.Tpo -c -o libcds_la-Mapper.lo `test -f 'src/static/mapper/Mapper.cpp' || echo '$(srcdir)/'`src/static/mapper/Mapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-Mapper.Tpo $(DEPDIR)/libcds_la-Mapper.Plo
#	$(AM_V_CXX)source='src/static/mapper/Mapper.cpp' object='libcds_la-Mapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-Mapper.lo `test -f 'src/static/mapper/Mapper.cpp' || echo '$(srcdir)/'`src/static/mapper/Mapper.cpp

libcds_la-HuffmanCoder.lo: src/static/coders/HuffmanCoder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-HuffmanCoder.lo -MD -MP -MF $(DEPDIR)/libcds_la-HuffmanCoder.Tpo -c -o libcds_la-HuffmanCoder.lo `test -f 'src/static/coders/HuffmanCoder.cpp' || echo '$(srcdir)/'`src/static/coders/HuffmanCoder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-HuffmanCoder.Tpo $(DEPDIR)/libcds_la-HuffmanCoder.Plo
#	$(AM_V_CXX)source='src/static/coders/HuffmanCoder.cpp' object='libcds_la-HuffmanCoder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-HuffmanCoder.lo `test -f 'src/static/coders/HuffmanCoder.cpp' || echo '$(srcdir)/'`src/static/coders/HuffmanCoder.cpp

libcds_la-huff.lo: src/static/coders/huff.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-huff.lo -MD -MP -MF $(DEPDIR)/libcds_la-huff.Tpo -c -o libcds_la-huff.lo `test -f 'src/static/coders/huff.cpp' || echo '$(srcdir)/'`src/static/coders/huff.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-huff.Tpo $(DEPDIR)/libcds_la-huff.Plo
#	$(AM_V_CXX)source='src/static/coders/huff.cpp' object='libcds_la-huff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-huff.lo `test -f 'src/static/coders/huff.cpp' || echo '$(srcdir)/'`src/static/coders/huff.cpp

libcds_la-PermutationMRRR.lo: src/static/permutation/PermutationMRRR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-PermutationMRRR.lo -MD -MP -MF $(DEPDIR)/libcds_la-PermutationMRRR.Tpo -c -o libcds_la-PermutationMRRR.lo `test -f 'src/static/permutation/PermutationMRRR.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationMRRR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-PermutationMRRR.Tpo $(DEPDIR)/libcds_la-PermutationMRRR.Plo
#	$(AM_V_CXX)source='src/static/permutation/PermutationMRRR.cpp' object='libcds_la-PermutationMRRR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-PermutationMRRR.lo `test -f 'src/static/permutation/PermutationMRRR.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationMRRR.cpp

libcds_la-PermutationBuilderMRRR.lo: src/static/permutation/PermutationBuilderMRRR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-PermutationBuilderMRRR.lo -MD -MP -MF $(DEPDIR)/libcds_la-PermutationBuilderMRRR.Tpo -c -o libcds_la-PermutationBuilderMRRR.lo `test -f 'src/static/permutation/PermutationBuilderMRRR.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationBuilderMRRR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-PermutationBuilderMRRR.Tpo $(DEPDIR)/libcds_la-PermutationBuilderMRRR.Plo
#	$(AM_V_CXX)source='src/static/permutation/PermutationBuilderMRRR.cpp' object='libcds_la-PermutationBuilderMRRR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-PermutationBuilderMRRR.lo `test -f 'src/static/permutation/PermutationBuilderMRRR.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationBuilderMRRR.cpp

libcds_la-Permutation.lo: src/static/permutation/Permutation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-Permutation.lo -MD -MP -MF $(DEPDIR)/libcds_la-Permutation.Tpo -c -o libcds_la-Permutation.lo `test -f 'src/static/permutation/Permutation.cpp' || echo '$(srcdir)/'`src/static/permutation/Permutation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-Permutation.Tpo $(DEPDIR)/libcds_la-Permutation.Plo
#	$(AM_V_CXX)source='src/static/permutation/Permutation.cpp' object='libcds_la-Permutation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-Permutation.lo `test -f 'src/static/permutation/Permutation.cpp' || echo '$(srcdir)/'`src/static/permutation/Permutation.cpp

libcds_la-perm.lo: src/static/permutation/perm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-perm.lo -MD -MP -MF $(DEPDIR)/libcds_la-perm.Tpo -c -o libcds_la-perm.lo `test -f 'src/static/permutation/perm.cpp' || echo '$(srcdir)/'`src/static/permutation/perm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-perm.Tpo $(DEPDIR)/libcds_la-perm.Plo
#	$(AM_V_CXX)source='src/static/permutation/perm.cpp' object='libcds_la-perm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-perm.lo `test -f 'src/static/permutation/perm.cpp' || echo '$(srcdir)/'`src/static/permutation/perm.cpp

libcds_la-wt_node.lo: src/static/sequence/wt_node.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-wt_node.lo -MD -MP -MF $(DEPDIR)/libcds_la-wt_node.Tpo -c -o libcds_la-wt_node.lo `test -f 'src/static/sequence/wt_node.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-wt_node.Tpo $(DEPDIR)/libcds_la-wt_node.Plo
#	$(AM_V_CXX)source='src/static/sequence/wt_node.cpp' object='libcds_la-wt_node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-wt_node.lo `test -f 'src/static/sequence/wt_node.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_node.cpp

libcds_la-wt_node_leaf.lo: src/static/sequence/wt_node_leaf.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-wt_node_leaf.lo -MD -MP -MF $(DEPDIR)/libcds_la-wt_node_leaf.Tpo -c -o libcds_la-wt_node_leaf.lo `test -f 'src/static/sequence/wt_node_leaf.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_node_leaf.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-wt_node_leaf.Tpo $(DEPDIR)/libcds_la-wt_node_leaf.Plo
#	$(AM_V_CXX)source='src/static/sequence/wt_node_leaf.cpp' object='libcds_la-wt_node_leaf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-wt_node_leaf.lo `test -f 'src/static/sequence/wt_node_leaf.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_node_leaf.cpp

libcds_la-wt_node_internal.lo: src/static/sequence/wt_node_internal.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-wt_node_internal.lo -MD -MP -MF $(DEPDIR)/libcds_la-wt_node_internal.Tpo -c -o libcds_la-wt_node_internal.lo `test -f 'src/static/sequence/wt_node_internal.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_node_internal.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-wt_node_internal.Tpo $(DEPDIR)/libcds_la-wt_node_internal.Plo
#	$(AM_V_CXX)source='src/static/sequence/wt_node_internal.cpp' object='libcds_la-wt_node_internal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-wt_node_internal.lo `test -f 'src/static/sequence/wt_node_internal.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_node_internal.cpp

libcds_la-wt_coder.lo: src/static/sequence/wt_coder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-wt_coder.lo -MD -MP -MF $(DEPDIR)/libcds_la-wt_coder.Tpo -c -o libcds_la-wt_coder.lo `test -f 'src/static/sequence/wt_coder.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_coder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-wt_coder.Tpo $(DEPDIR)/libcds_la-wt_coder.Plo
#	$(AM_V_CXX)source='src/static/sequence/wt_coder.cpp' object='libcds_la-wt_coder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-wt_coder.lo `test -f 'src/static/sequence/wt_coder.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_coder.cpp

libcds_la-wt_coder_huff.lo: src/static/sequence/wt_coder_huff.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-wt_coder_huff.lo -MD -MP -MF $(DEPDIR)/libcds_la-wt_coder_huff.Tpo -c -o libcds_la-wt_coder_huff.lo `test -f 'src/static/sequence/wt_coder_huff.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_coder_huff.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-wt_coder_huff.Tpo $(DEPDIR)/libcds_la-wt_coder_huff.Plo
#	$(AM_V_CXX)source='src/static/sequence/wt_coder_huff.cpp' object='libcds_la-wt_coder_huff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-wt_coder_huff.lo `test -f 'src/static/sequence/wt_coder_huff.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_coder_huff.cpp

libcds_la-wt_coder_binary.lo: src/static/sequence/wt_coder_binary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-wt_coder_binary.lo -MD -MP -MF $(DEPDIR)/libcds_la-wt_coder_binary.Tpo -c -o libcds_la-wt_coder_binary.lo `test -f 'src/static/sequence/wt_coder_binary.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_coder_binary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-wt_coder_binary.Tpo $(DEPDIR)/libcds_la-wt_coder_binary.Plo
#	$(AM_V_CXX)source='src/static/sequence/wt_coder_binary.cpp' object='libcds_la-wt_coder_binary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-wt_coder_binary.lo `test -f 'src/static/sequence/wt_coder_binary.cpp' || echo '$(srcdir)/'`src/static/sequence/wt_coder_binary.cpp

libcds_la-WaveletTreeNoptrs.lo: src/static/sequence/WaveletTreeNoptrs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-WaveletTreeNoptrs.lo -MD -MP -MF $(DEPDIR)/libcds_la-WaveletTreeNoptrs.Tpo -c -o libcds_la-WaveletTreeNoptrs.lo `test -f 'src/static/sequence/WaveletTreeNoptrs.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletTreeNoptrs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-WaveletTreeNoptrs.Tpo $(DEPDIR)/libcds_la-WaveletTreeNoptrs.Plo
#	$(AM_V_CXX)source='src/static/sequence/WaveletTreeNoptrs.cpp' object='libcds_la-WaveletTreeNoptrs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-WaveletTreeNoptrs.lo `test -f 'src/static/sequence/WaveletTreeNoptrs.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletTreeNoptrs.cpp

libcds_la-WaveletTree.lo: src/static/sequence/WaveletTree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-WaveletTree.lo -MD -MP -MF $(DEPDIR)/libcds_la-WaveletTree.Tpo -c -o libcds_la-WaveletTree.lo `test -f 'src/static/sequence/WaveletTree.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletTree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-WaveletTree.Tpo $(DEPDIR)/libcds_la-WaveletTree.Plo
#	$(AM_V_CXX)source='src/static/sequence/WaveletTree.cpp' object='libcds_la-WaveletTree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-WaveletTree.lo `test -f 'src/static/sequence/WaveletTree.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletTree.cpp

libcds_la-SequenceGMRChunk.lo: src/static/sequence/SequenceGMRChunk.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceGMRChunk.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceGMRChunk.Tpo -c -o libcds_la-SequenceGMRChunk.lo `test -f 'src/static/sequence/SequenceGMRChunk.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceGMRChunk.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceGMRChunk.Tpo $(DEPDIR)/libcds_la-SequenceGMRChunk.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceGMRChunk.cpp' object='libcds_la-SequenceGMRChunk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceGMRChunk.lo `test -f 'src/static/sequence/SequenceGMRChunk.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceGMRChunk.cpp

libcds_la-SequenceGMR.lo: src/static/sequence/SequenceGMR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceGMR.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceGMR.Tpo -c -o libcds_la-SequenceGMR.lo `test -f 'src/static/sequence/SequenceGMR.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceGMR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceGMR.Tpo $(DEPDIR)/libcds_la-SequenceGMR.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceGMR.cpp' object='libcds_la-SequenceGMR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceGMR.lo `test -f 'src/static/sequence/SequenceGMR.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceGMR.cpp

libcds_la-SequenceBuilderWaveletTreeNoptrs.lo: src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderWaveletTreeNoptrs.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrs.Tpo -c -o libcds_la-SequenceBuilderWaveletTreeNoptrs.lo `test -f 'src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrs.Tpo $(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrs.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp' object='libcds_la-SequenceBuilderWaveletTreeNoptrs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderWaveletTreeNoptrs.lo `test -f 'src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp

libcds_la-SequenceBuilderWaveletTree.lo: src/static/sequence/SequenceBuilderWaveletTree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderWaveletTree.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderWaveletTree.Tpo -c -o libcds_la-SequenceBuilderWaveletTree.lo `test -f 'src/static/sequence/SequenceBuilderWaveletTree.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletTree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderWaveletTree.Tpo $(DEPDIR)/libcds_la-SequenceBuilderWaveletTree.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderWaveletTree.cpp' object='libcds_la-SequenceBuilderWaveletTree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderWaveletTree.lo `test -f 'src/static/sequence/SequenceBuilderWaveletTree.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletTree.cpp

libcds_la-SequenceBuilderStr.lo: src/static/sequence/SequenceBuilderStr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderStr.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderStr.Tpo -c -o libcds_la-SequenceBuilderStr.lo `test -f 'src/static/sequence/SequenceBuilderStr.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderStr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderStr.Tpo $(DEPDIR)/libcds_la-SequenceBuilderStr.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderStr.cpp' object='libcds_la-SequenceBuilderStr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderStr.lo `test -f 'src/static/sequence/SequenceBuilderStr.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderStr.cpp

libcds_la-SequenceBuilderGMRChunk.lo: src/static/sequence/SequenceBuilderGMRChunk.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderGMRChunk.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderGMRChunk.Tpo -c -o libcds_la-SequenceBuilderGMRChunk.lo `test -f 'src/static/sequence/SequenceBuilderGMRChunk.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderGMRChunk.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderGMRChunk.Tpo $(DEPDIR)/libcds_la-SequenceBuilderGMRChunk.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderGMRChunk.cpp' object='libcds_la-SequenceBuilderGMRChunk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderGMRChunk.lo `test -f 'src/static/sequence/SequenceBuilderGMRChunk.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderGMRChunk.cpp

libcds_la-SequenceBuilderGMR.lo: src/static/sequence/SequenceBuilderGMR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderGMR.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderGMR.Tpo -c -o libcds_la-SequenceBuilderGMR.lo `test -f 'src/static/sequence/SequenceBuilderGMR.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderGMR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderGMR.Tpo $(DEPDIR)/libcds_la-SequenceBuilderGMR.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderGMR.cpp' object='libcds_la-SequenceBuilderGMR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderGMR.lo `test -f 'src/static/sequence/SequenceBuilderGMR.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderGMR.cpp

libcds_la-SequenceBuilderAlphPart.lo: src/static/sequence/SequenceBuilderAlphPart.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderAlphPart.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderAlphPart.Tpo -c -o libcds_la-SequenceBuilderAlphPart.lo `test -f 'src/static/sequence/SequenceBuilderAlphPart.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderAlphPart.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderAlphPart.Tpo $(DEPDIR)/libcds_la-SequenceBuilderAlphPart.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderAlphPart.cpp' object='libcds_la-SequenceBuilderAlphPart.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderAlphPart.lo `test -f 'src/static/sequence/SequenceBuilderAlphPart.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderAlphPart.cpp

libcds_la-SequenceAlphPart.lo: src/static/sequence/SequenceAlphPart.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceAlphPart.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceAlphPart.Tpo -c -o libcds_la-SequenceAlphPart.lo `test -f 'src/static/sequence/SequenceAlphPart.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceAlphPart.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceAlphPart.Tpo $(DEPDIR)/libcds_la-SequenceAlphPart.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceAlphPart.cpp' object='libcds_la-SequenceAlphPart.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceAlphPart.lo `test -f 'src/static/sequence/SequenceAlphPart.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceAlphPart.cpp

libcds_la-Sequence.lo: src/static/sequence/Sequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-Sequence.lo -MD -MP -MF $(DEPDIR)/libcds_la-Sequence.Tpo -c -o libcds_la-Sequence.lo `test -f 'src/static/sequence/Sequence.cpp' || echo '$(srcdir)/'`src/static/sequence/Sequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-Sequence.Tpo $(DEPDIR)/libcds_la-Sequence.Plo
#	$(AM_V_CXX)source='src/static/sequence/Sequence.cpp' object='libcds_la-Sequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-Sequence.lo `test -f 'src/static/sequence/Sequence.cpp' || echo '$(srcdir)/'`src/static/sequence/Sequence.cpp

libcds_la-BitmapsSequence.lo: src/static/sequence/BitmapsSequence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-BitmapsSequence.lo -MD -MP -MF $(DEPDIR)/libcds_la-BitmapsSequence.Tpo -c -o libcds_la-BitmapsSequence.lo `test -f 'src/static/sequence/BitmapsSequence.cpp' || echo '$(srcdir)/'`src/static/sequence/BitmapsSequence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-BitmapsSequence.Tpo $(DEPDIR)/libcds_la-BitmapsSequence.Plo
#	$(AM_V_CXX)source='src/static/sequence/BitmapsSequence.cpp' object='libcds_la-BitmapsSequence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-BitmapsSequence.lo `test -f 'src/static/sequence/BitmapsSequence.cpp' || echo '$(srcdir)/'`src/static/sequence/BitmapsSequence.cpp

libcds_la-timing.lo: src/utils/timing.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-timing.lo -MD -MP -MF $(DEPDIR)/libcds_la-timing.Tpo -c -o libcds_la-timing.lo `test -f 'src/utils/timing.cpp' || echo '$(srcdir)/'`src/utils/timing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-timing.Tpo $(DEPDIR)/libcds_la-timing.Plo
#	$(AM_V_CXX)source='src/utils/timing.cpp' object='libcds_la-timing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-timing.lo `test -f 'src/utils/timing.cpp' || echo '$(srcdir)/'`src/utils/timing.cpp

libcds_la-TextIndexCSA.lo: src/static/textindex/TextIndexCSA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-TextIndexCSA.lo -MD -MP -MF $(DEPDIR)/libcds_la-TextIndexCSA.Tpo -c -o libcds_la-TextIndexCSA.lo `test -f 'src/static/textindex/TextIndexCSA.cpp' || echo '$(srcdir)/'`src/static/textindex/TextIndexCSA.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-TextIndexCSA.Tpo $(DEPDIR)/libcds_la-TextIndexCSA.Plo
#	$(AM_V_CXX)source='src/static/textindex/TextIndexCSA.cpp' object='libcds_la-TextIndexCSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-TextIndexCSA.lo `test -f 'src/static/textindex/TextIndexCSA.cpp' || echo '$(srcdir)/'`src/static/textindex/TextIndexCSA.cpp

libcds_la-TextIndex.lo: src/static/textindex/TextIndex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-TextIndex.lo -MD -MP -MF $(DEPDIR)/libcds_la-TextIndex.Tpo -c -o libcds_la-TextIndex.lo `test -f 'src/static/textindex/TextIndex.cpp' || echo '$(srcdir)/'`src/static/textindex/TextIndex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-TextIndex.Tpo $(DEPDIR)/libcds_la-TextIndex.Plo
#	$(AM_V_CXX)source='src/static/textindex/TextIndex.cpp' object='libcds_la-TextIndex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-TextIndex.lo `test -f 'src/static/textindex/TextIndex.cpp' || echo '$(srcdir)/'`src/static/textindex/TextIndex.cpp

libcds_la-suftest3.test.lo: src/static/textindex/suftest3.test.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-suftest3.test.lo -MD -MP -MF $(DEPDIR)/libcds_la-suftest3.test.Tpo -c -o libcds_la-suftest3.test.lo `test -f 'src/static/textindex/suftest3.test.cpp' || echo '$(srcdir)/'`src/static/textindex/suftest3.test.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-suftest3.test.Tpo $(DEPDIR)/libcds_la-suftest3.test.Plo
#	$(AM_V_CXX)source='src/static/textindex/suftest3.test.cpp' object='libcds_la-suftest3.test.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-suftest3.test.lo `test -f 'src/static/textindex/suftest3.test.cpp' || echo '$(srcdir)/'`src/static/textindex/suftest3.test.cpp

libcds_la-qsufsort.lo: src/static/textindex/qsufsort.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-qsufsort.lo -MD -MP -MF $(DEPDIR)/libcds_la-qsufsort.Tpo -c -o libcds_la-qsufsort.lo `test -f 'src/static/textindex/qsufsort.cpp' || echo '$(srcdir)/'`src/static/textindex/qsufsort.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-qsufsort.Tpo $(DEPDIR)/libcds_la-qsufsort.Plo
#	$(AM_V_CXX)source='src/static/textindex/qsufsort.cpp' object='libcds_la-qsufsort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-qsufsort.lo `test -f 'src/static/textindex/qsufsort.cpp' || echo '$(srcdir)/'`src/static/textindex/qsufsort.cpp

libcds_la-mmap.lo: src/static/textindex/mmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-mmap.lo -MD -MP -MF $(DEPDIR)/libcds_la-mmap.Tpo -c -o libcds_la-mmap.lo `test -f 'src/static/textindex/mmap.cpp' || echo '$(srcdir)/'`src/static/textindex/mmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-mmap.Tpo $(DEPDIR)/libcds_la-mmap.Plo
#	$(AM_V_CXX)source='src/static/textindex/mmap.cpp' object='libcds_la-mmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-mmap.lo `test -f 'src/static/textindex/mmap.cpp' || echo '$(srcdir)/'`src/static/textindex/mmap.cpp

libcds_la-comparray4.lo: src/static/textindex/comparray4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-comparray4.lo -MD -MP -MF $(DEPDIR)/libcds_la-comparray4.Tpo -c -o libcds_la-comparray4.lo `test -f 'src/static/textindex/comparray4.cpp' || echo '$(srcdir)/'`src/static/textindex/comparray4.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-comparray4.Tpo $(DEPDIR)/libcds_la-comparray4.Plo
#	$(AM_V_CXX)source='src/static/textindex/comparray4.cpp' object='libcds_la-comparray4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-comparray4.lo `test -f 'src/static/textindex/comparray4.cpp' || echo '$(srcdir)/'`src/static/textindex/comparray4.cpp

libcds_la-SuffixTreeY.lo: src/static/suffixtree/SuffixTreeY.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SuffixTreeY.lo -MD -MP -MF $(DEPDIR)/libcds_la-SuffixTreeY.Tpo -c -o libcds_la-SuffixTreeY.lo `test -f 'src/static/suffixtree/SuffixTreeY.cpp' || echo '$(srcdir)/'`src/static/suffixtree/SuffixTreeY.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SuffixTreeY.Tpo $(DEPDIR)/libcds_la-SuffixTreeY.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/SuffixTreeY.cpp' object='libcds_la-SuffixTreeY.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SuffixTreeY.lo `test -f 'src/static/suffixtree/SuffixTreeY.cpp' || echo '$(srcdir)/'`src/static/suffixtree/SuffixTreeY.cpp

libcds_la-SuffixTree.lo: src/static/suffixtree/SuffixTree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SuffixTree.lo -MD -MP -MF $(DEPDIR)/libcds_la-SuffixTree.Tpo -c -o libcds_la-SuffixTree.lo `test -f 'src/static/suffixtree/SuffixTree.cpp' || echo '$(srcdir)/'`src/static/suffixtree/SuffixTree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SuffixTree.Tpo $(DEPDIR)/libcds_la-SuffixTree.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/SuffixTree.cpp' object='libcds_la-SuffixTree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SuffixTree.lo `test -f 'src/static/suffixtree/SuffixTree.cpp' || echo '$(srcdir)/'`src/static/suffixtree/SuffixTree.cpp

libcds_la-RMQ_succinct.lo: src/static/suffixtree/RMQ_succinct.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-RMQ_succinct.lo -MD -MP -MF $(DEPDIR)/libcds_la-RMQ_succinct.Tpo -c -o libcds_la-RMQ_succinct.lo `test -f 'src/static/suffixtree/RMQ_succinct.cpp' || echo '$(srcdir)/'`src/static/suffixtree/RMQ_succinct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-RMQ_succinct.Tpo $(DEPDIR)/libcds_la-RMQ_succinct.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/RMQ_succinct.cpp' object='libcds_la-RMQ_succinct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-RMQ_succinct.lo `test -f 'src/static/suffixtree/RMQ_succinct.cpp' || echo '$(srcdir)/'`src/static/suffixtree/RMQ_succinct.cpp

libcds_la-RMQ_succinct_lcp.lo: src/static/suffixtree/RMQ_succinct_lcp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-RMQ_succinct_lcp.lo -MD -MP -MF $(DEPDIR)/libcds_la-RMQ_succinct_lcp.Tpo -c -o libcds_la-RMQ_succinct_lcp.lo `test -f 'src/static/suffixtree/RMQ_succinct_lcp.cpp' || echo '$(srcdir)/'`src/static/suffixtree/RMQ_succinct_lcp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-RMQ_succinct_lcp.Tpo $(DEPDIR)/libcds_la-RMQ_succinct_lcp.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/RMQ_succinct_lcp.cpp' object='libcds_la-RMQ_succinct_lcp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-RMQ_succinct_lcp.lo `test -f 'src/static/suffixtree/RMQ_succinct_lcp.cpp' || echo '$(srcdir)/'`src/static/suffixtree/RMQ_succinct_lcp.cpp

libcds_la-PSV.lo: src/static/suffixtree/PSV.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-PSV.lo -MD -MP -MF $(DEPDIR)/libcds_la-PSV.Tpo -c -o libcds_la-PSV.lo `test -f 'src/static/suffixtree/PSV.cpp' || echo '$(srcdir)/'`src/static/suffixtree/PSV.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-PSV.Tpo $(DEPDIR)/libcds_la-PSV.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/PSV.cpp' object='libcds_la-PSV.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-PSV.lo `test -f 'src/static/suffixtree/PSV.cpp' || echo '$(srcdir)/'`src/static/suffixtree/PSV.cpp

libcds_la-NSV.lo: src/static/suffixtree/NSV.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-NSV.lo -MD -MP -MF $(DEPDIR)/libcds_la-NSV.Tpo -c -o libcds_la-NSV.lo `test -f 'src/static/suffixtree/NSV.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NSV.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-NSV.Tpo $(DEPDIR)/libcds_la-NSV.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/NSV.cpp' object='libcds_la-NSV.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-NSV.lo `test -f 'src/static/suffixtree/NSV.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NSV.cpp

libcds_la-NPR.lo: src/static/suffixtree/NPR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-NPR.lo -MD -MP -MF $(DEPDIR)/libcds_la-NPR.Tpo -c -o libcds_la-NPR.lo `test -f 'src/static/suffixtree/NPR.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NPR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-NPR.Tpo $(DEPDIR)/libcds_la-NPR.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/NPR.cpp' object='libcds_la-NPR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-NPR.lo `test -f 'src/static/suffixtree/NPR.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NPR.cpp

libcds_la-NPR_FMN.lo: src/static/suffixtree/NPR_FMN.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-NPR_FMN.lo -MD -MP -MF $(DEPDIR)/libcds_la-NPR_FMN.Tpo -c -o libcds_la-NPR_FMN.lo `test -f 'src/static/suffixtree/NPR_FMN.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NPR_FMN.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-NPR_FMN.Tpo $(DEPDIR)/libcds_la-NPR_FMN.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/NPR_FMN.cpp' object='libcds_la-NPR_FMN.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-NPR_FMN.lo `test -f 'src/static/suffixtree/NPR_FMN.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NPR_FMN.cpp

libcds_la-NPR_CN.lo: src/static/suffixtree/NPR_CN.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-NPR_CN.lo -MD -MP -MF $(DEPDIR)/libcds_la-NPR_CN.Tpo -c -o libcds_la-NPR_CN.lo `test -f 'src/static/suffixtree/NPR_CN.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NPR_CN.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-NPR_CN.Tpo $(DEPDIR)/libcds_la-NPR_CN.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/NPR_CN.cpp' object='libcds_la-NPR_CN.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-NPR_CN.lo `test -f 'src/static/suffixtree/NPR_CN.cpp' || echo '$(srcdir)/'`src/static/suffixtree/NPR_CN.cpp

libcds_la-LCP.lo: src/static/suffixtree/LCP.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP.Tpo -c -o libcds_la-LCP.lo `test -f 'src/static/suffixtree/LCP.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP.Tpo $(DEPDIR)/libcds_la-LCP.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP.cpp' object='libcds_la-LCP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP.lo `test -f 'src/static/suffixtree/LCP.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP.cpp

libcds_la-LCP_Sad.lo: src/static/suffixtree/LCP_Sad.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_Sad.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_Sad.Tpo -c -o libcds_la-LCP_Sad.lo `test -f 'src/static/suffixtree/LCP_Sad.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_Sad.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_Sad.Tpo $(DEPDIR)/libcds_la-LCP_Sad.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_Sad.cpp' object='libcds_la-LCP_Sad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_Sad.lo `test -f 'src/static/suffixtree/LCP_Sad.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_Sad.cpp

libcds_la-LCP_PT.lo: src/static/suffixtree/LCP_PT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_PT.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_PT.Tpo -c -o libcds_la-LCP_PT.lo `test -f 'src/static/suffixtree/LCP_PT.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_PT.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_PT.Tpo $(DEPDIR)/libcds_la-LCP_PT.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_PT.cpp' object='libcds_la-LCP_PT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_PT.lo `test -f 'src/static/suffixtree/LCP_PT.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_PT.cpp

libcds_la-LCP_PhiSpare.lo: src/static/suffixtree/LCP_PhiSpare.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_PhiSpare.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_PhiSpare.Tpo -c -o libcds_la-LCP_PhiSpare.lo `test -f 'src/static/suffixtree/LCP_PhiSpare.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_PhiSpare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_PhiSpare.Tpo $(DEPDIR)/libcds_la-LCP_PhiSpare.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_PhiSpare.cpp' object='libcds_la-LCP_PhiSpare.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_PhiSpare.lo `test -f 'src/static/suffixtree/LCP_PhiSpare.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_PhiSpare.cpp

libcds_la-LCP_naive.lo: src/static/suffixtree/LCP_naive.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_naive.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_naive.Tpo -c -o libcds_la-LCP_naive.lo `test -f 'src/static/suffixtree/LCP_naive.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_naive.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_naive.Tpo $(DEPDIR)/libcds_la-LCP_naive.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_naive.cpp' object='libcds_la-LCP_naive.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_naive.lo `test -f 'src/static/suffixtree/LCP_naive.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_naive.cpp

libcds_la-LCP_FMN.lo: src/static/suffixtree/LCP_FMN.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_FMN.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_FMN.Tpo -c -o libcds_la-LCP_FMN.lo `test -f 'src/static/suffixtree/LCP_FMN.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_FMN.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_FMN.Tpo $(DEPDIR)/libcds_la-LCP_FMN.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_FMN.cpp' object='libcds_la-LCP_FMN.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_FMN.lo `test -f 'src/static/suffixtree/LCP_FMN.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_FMN.cpp

libcds_la-LCP_DAC.lo: src/static/suffixtree/LCP_DAC.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_DAC.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_DAC.Tpo -c -o libcds_la-LCP_DAC.lo `test -f 'src/static/suffixtree/LCP_DAC.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_DAC.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_DAC.Tpo $(DEPDIR)/libcds_la-LCP_DAC.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_DAC.cpp' object='libcds_la-LCP_DAC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_DAC.lo `test -f 'src/static/suffixtree/LCP_DAC.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_DAC.cpp

libcds_la-LCP_DAC_VAR.lo: src/static/suffixtree/LCP_DAC_VAR.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-LCP_DAC_VAR.lo -MD -MP -MF $(DEPDIR)/libcds_la-LCP_DAC_VAR.Tpo -c -o libcds_la-LCP_DAC_VAR.lo `test -f 'src/static/suffixtree/LCP_DAC_VAR.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_DAC_VAR.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-LCP_DAC_VAR.Tpo $(DEPDIR)/libcds_la-LCP_DAC_VAR.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/LCP_DAC_VAR.cpp' object='libcds_la-LCP_DAC_VAR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-LCP_DAC_VAR.lo `test -f 'src/static/suffixtree/LCP_DAC_VAR.cpp' || echo '$(srcdir)/'`src/static/suffixtree/LCP_DAC_VAR.cpp

libcds_la-factorization.lo: src/static/suffixtree/factorization.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-factorization.lo -MD -MP -MF $(DEPDIR)/libcds_la-factorization.Tpo -c -o libcds_la-factorization.lo `test -f 'src/static/suffixtree/factorization.cpp' || echo '$(srcdir)/'`src/static/suffixtree/factorization.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-factorization.Tpo $(DEPDIR)/libcds_la-factorization.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/factorization.cpp' object='libcds_la-factorization.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-factorization.lo `test -f 'src/static/suffixtree/factorization.cpp' || echo '$(srcdir)/'`src/static/suffixtree/factorization.cpp

libcds_la-factorization_var.lo: src/static/suffixtree/factorization_var.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-factorization_var.lo -MD -MP -MF $(DEPDIR)/libcds_la-factorization_var.Tpo -c -o libcds_la-factorization_var.lo `test -f 'src/static/suffixtree/factorization_var.cpp' || echo '$(srcdir)/'`src/static/suffixtree/factorization_var.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-factorization_var.Tpo $(DEPDIR)/libcds_la-factorization_var.Plo
#	$(AM_V_CXX)source='src/static/suffixtree/factorization_var.cpp' object='libcds_la-factorization_var.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-factorization_var.lo `test -f 'src/static/suffixtree/factorization_var.cpp' || echo '$(srcdir)/'`src/static/suffixtree/factorization_var.cpp

libcds_la-WaveletTreeNoptrsS.lo: src/static/sequence/WaveletTreeNoptrsS.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-WaveletTreeNoptrsS.lo -MD -MP -MF $(DEPDIR)/libcds_la-WaveletTreeNoptrsS.Tpo -c -o libcds_la-WaveletTreeNoptrsS.lo `test -f 'src/static/sequence/WaveletTreeNoptrsS.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletTreeNoptrsS.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-WaveletTreeNoptrsS.Tpo $(DEPDIR)/libcds_la-WaveletTreeNoptrsS.Plo
#	$(AM_V_CXX)source='src/static/sequence/WaveletTreeNoptrsS.cpp' object='libcds_la-WaveletTreeNoptrsS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-WaveletTreeNoptrsS.lo `test -f 'src/static/sequence/WaveletTreeNoptrsS.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletTreeNoptrsS.cpp

libcds_la-WaveletMatrix.lo: src/static/sequence/WaveletMatrix.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-WaveletMatrix.lo -MD -MP -MF $(DEPDIR)/libcds_la-WaveletMatrix.Tpo -c -o libcds_la-WaveletMatrix.lo `test -f 'src/static/sequence/WaveletMatrix.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletMatrix.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-WaveletMatrix.Tpo $(DEPDIR)/libcds_la-WaveletMatrix.Plo
#	$(AM_V_CXX)source='src/static/sequence/WaveletMatrix.cpp' object='libcds_la-WaveletMatrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-WaveletMatrix.lo `test -f 'src/static/sequence/WaveletMatrix.cpp' || echo '$(srcdir)/'`src/static/sequence/WaveletMatrix.cpp

libcds_la-SequenceBuilderWaveletTreeNoptrsS.lo: src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderWaveletTreeNoptrsS.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrsS.Tpo -c -o libcds_la-SequenceBuilderWaveletTreeNoptrsS.lo `test -f 'src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrsS.Tpo $(DEPDIR)/libcds_la-SequenceBuilderWaveletTreeNoptrsS.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp' object='libcds_la-SequenceBuilderWaveletTreeNoptrsS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderWaveletTreeNoptrsS.lo `test -f 'src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp

libcds_la-SequenceBuilderWaveletMatrix.lo: src/static/sequence/SequenceBuilderWaveletMatrix.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-SequenceBuilderWaveletMatrix.lo -MD -MP -MF $(DEPDIR)/libcds_la-SequenceBuilderWaveletMatrix.Tpo -c -o libcds_la-SequenceBuilderWaveletMatrix.lo `test -f 'src/static/sequence/SequenceBuilderWaveletMatrix.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletMatrix.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-SequenceBuilderWaveletMatrix.Tpo $(DEPDIR)/libcds_la-SequenceBuilderWaveletMatrix.Plo
#	$(AM_V_CXX)source='src/static/sequence/SequenceBuilderWaveletMatrix.cpp' object='libcds_la-SequenceBuilderWaveletMatrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-SequenceBuilderWaveletMatrix.lo `test -f 'src/static/sequence/SequenceBuilderWaveletMatrix.cpp' || echo '$(srcdir)/'`src/static/sequence/SequenceBuilderWaveletMatrix.cpp

libcds_la-PermutationWT.lo: src/static/permutation/PermutationWT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-PermutationWT.lo -MD -MP -MF $(DEPDIR)/libcds_la-PermutationWT.Tpo -c -o libcds_la-PermutationWT.lo `test -f 'src/static/permutation/PermutationWT.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationWT.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-PermutationWT.Tpo $(DEPDIR)/libcds_la-PermutationWT.Plo
#	$(AM_V_CXX)source='src/static/permutation/PermutationWT.cpp' object='libcds_la-PermutationWT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-PermutationWT.lo `test -f 'src/static/permutation/PermutationWT.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationWT.cpp

libcds_la-PermutationBuilderWT.lo: src/static/permutation/PermutationBuilderWT.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-PermutationBuilderWT.lo -MD -MP -MF $(DEPDIR)/libcds_la-PermutationBuilderWT.Tpo -c -o libcds_la-PermutationBuilderWT.lo `test -f 'src/static/permutation/PermutationBuilderWT.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationBuilderWT.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-PermutationBuilderWT.Tpo $(DEPDIR)/libcds_la-PermutationBuilderWT.Plo
#	$(AM_V_CXX)source='src/static/permutation/PermutationBuilderWT.cpp' object='libcds_la-PermutationBuilderWT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-PermutationBuilderWT.lo `test -f 'src/static/permutation/PermutationBuilderWT.cpp' || echo '$(srcdir)/'`src/static/permutation/PermutationBuilderWT.cpp

libcds_la-MapperRev.lo: src/static/mapper/MapperRev.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcds_la-MapperRev.lo -MD -MP -MF $(DEPDIR)/libcds_la-MapperRev.Tpo -c -o libcds_la-MapperRev.lo `test -f 'src/static/mapper/MapperRev.cpp' || echo '$(srcdir)/'`src/static/mapper/MapperRev.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcds_la-MapperRev.Tpo $(DEPDIR)/libcds_la-MapperRev.Plo
#	$(AM_V_CXX)source='src/static/mapper/MapperRev.cpp' object='libcds_la-MapperRev.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcds_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcds_la-MapperRev.lo `test -f 'src/static/mapper/MapperRev.cpp' || echo '$(srcdir)/'`src/static/mapper/MapperRev.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
